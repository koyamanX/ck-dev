<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on ck-dev</title>
    <link>https://koyamanx.github.io/ck-dev/tags/linux/</link>
    <description>Recent content in Linux on ck-dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>©2021 koyamanX</copyright>
    <lastBuildDate>Fri, 02 Apr 2021 13:59:10 +0900</lastBuildDate>
    
        <atom:link href="https://koyamanx.github.io/ck-dev/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My RISC-V debug feature part3</title>
      <link>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part3/</link>
      <pubDate>Tue, 20 Apr 2021 22:55:05 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part3/</guid>
      <description>&lt;p&gt;OpenOCD RISC-VにVJTAGのサポートを行う。
OpenOCDにて、VJTAG on DE10-Liteにアクセスしてみる。&lt;/p&gt;
&lt;h3 id=&#34;openocdのvjtagサポート状況&#34;&gt;OpenOCDのVJTAGサポート状況&lt;/h3&gt;
&lt;p&gt;or1kはVJTAGに対応している。
この実装を理解して、OpenOCD RISC-Vへ移植をする。&lt;/p&gt;
&lt;h3 id=&#34;openocd-vjtag-support-or1kの実装を読解する&#34;&gt;OpenOCD VJTAG support (or1kの実装を読解する)&lt;/h3&gt;
&lt;p&gt;まず、or1kでどのようにVJTAGを使っているのか確かめる。
そのために、cfgファイルを読む。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tcl/target/or1k.cfg&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tcl&#34; data-lang=&#34;tcl&#34;&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;  _ENDIAN big

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;info&lt;/span&gt; exists CHIPNAME&lt;span class=&#34;k&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; _CHIPNAME &lt;span class=&#34;nv&#34;&gt;$CHIPNAME&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; _CHIPNAME or1k
&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;info&lt;/span&gt; exists TAP_TYPE&lt;span class=&#34;k&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; _TAP_TYPE &lt;span class=&#34;nv&#34;&gt;$TAP_TYPE&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;You need to select a tap type&amp;#34;&lt;/span&gt;
   &lt;span class=&#34;nv&#34;&gt;shutdown&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;# Configure the target
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;string&lt;/span&gt; compare &lt;span class=&#34;nv&#34;&gt;$_TAP_TYPE&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;VJTAG&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;info&lt;/span&gt; exists FPGATAPID&lt;span class=&#34;k&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
	   &lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; _FPGATAPID &lt;span class=&#34;nv&#34;&gt;$FPGATAPID&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;{&lt;/span&gt;
	   &lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;You need to set your FPGA JTAG ID&amp;#34;&lt;/span&gt;
		&lt;span class=&#34;nv&#34;&gt;shutdown&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nv&#34;&gt;jtag&lt;/span&gt; newtap &lt;span class=&#34;nv&#34;&gt;$_CHIPNAME&lt;/span&gt; cpu &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;irlen &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;expected-id &lt;span class=&#34;nv&#34;&gt;$_FPGATAPID&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt; _TARGETNAME &lt;span class=&#34;nv&#34;&gt;$_CHIPNAME.cpu&lt;/span&gt;
	&lt;span class=&#34;nv&#34;&gt;target&lt;/span&gt; create &lt;span class=&#34;nv&#34;&gt;$_TARGETNAME&lt;/span&gt; or1k &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;endian &lt;span class=&#34;nv&#34;&gt;$_ENDIAN&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;chain-position &lt;span class=&#34;nv&#34;&gt;$_TARGETNAME&lt;/span&gt;

	&lt;span class=&#34;c&#34;&gt;# Select the TAP core we are using
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nv&#34;&gt;tap_select&lt;/span&gt; vjtag
&lt;span class=&#34;k&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;tap_select vjtag&lt;/code&gt;にてVJTAGをTAPとして選択するようである。
&lt;code&gt;tap_select&lt;/code&gt;コマンドはor1k向けに定義されたものであるため、&lt;code&gt;target&lt;/code&gt;コマンドでor1kを選択してから
でないと使用することができない。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tap_select&lt;/code&gt;命令をまず、RISC-V向けに移植したい。&lt;/p&gt;
&lt;h3 id=&#34;tap_select命令の移植&#34;&gt;tap_select命令の移植&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;src/target/openrisc/or1k.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;command_registration&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_hw_ip_command_handlers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;tap_select&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_tap_select_command_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;COMMAND_ANY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;usage&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Select the TAP core to use&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;src/target/openrisc/or1k.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;COMMAND_HANDLER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k_tap_select_command_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_current_target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CMD_CTX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_common&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;target_to_or1k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_jtag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_tap_ip&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CMD_ARGC&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_COMMAND_SYNTAX_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;list_for_each_entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CMD_ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;jtag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap_ip&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;LOG_INFO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s tap selected&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;or1k_tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;LOG_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s unknown, no tap selected&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CMD_ARGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_COMMAND_SYNTAX_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;tap_select&lt;/code&gt;コマンドは、&lt;code&gt;or1k_tap_select_command_handler&lt;/code&gt;が対処する。
&lt;code&gt;tap_select&lt;/code&gt;コマンドの第一引数にあるインターフェースを使用する。
VJTAGを選択した場合を見てみる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/target/openrisc/or1k_tap_vjtag.c&lt;/code&gt;で実装されている。
&lt;code&gt;or1k_tap_vjtag_init&lt;/code&gt;が初期化用の処理である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;n&#34;&gt;jtag_add_tlr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずは、TAPを初期状態にする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;n&#34;&gt;uint8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scan_field&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_tap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Select VIR */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;その後、sld_hubのIRを&lt;code&gt;USER1&lt;/code&gt;にする。
この操作で、Select_IRを行い、Shift_IRにて、sld_hubのIRに&lt;code&gt;USER1&lt;/code&gt;のコード(0xE, 10 bit)を書き込む。&lt;/p&gt;
&lt;p&gt;次に、DR Shiftを行う。
&lt;code&gt;USER1&lt;/code&gt;レジスタのフォーマットは以下のようになっている。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
ただし、nはCEIL(log2(Number of SLD_nodes + 1))である。
mは各VIRの長さの最大値である。
&lt;code&gt;sld_hub&lt;/code&gt;には以下のレジスタがある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SLD HUB IP Configuration Register&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;sld_hubに接続されているsld_nodeの情報や、USER1 DRの寸法がわかる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;各&lt;code&gt;sld_hub&lt;/code&gt;の&lt;code&gt;SLD_NODE_INFO&lt;/code&gt;レジスタ
&lt;ul&gt;
&lt;li&gt;indexとアドレスのマッピングがわかる
&lt;code&gt;HUB_INFO&lt;/code&gt;命令を使用し、&lt;code&gt;HUB IP Configuration Register&lt;/code&gt;を読み出す。
また、各sld_nodeのアドレスマッピングを保持している、&lt;code&gt;SLD_NODE_INFO&lt;/code&gt;レジスタがある。
ただし、この時点でsld_hubに接続されたsld_nodeの数がわからない。
また、n, mについてもわからない状態である。
そこで、USER1 DRをゼロで埋める。
nがわからないが、64回シフトすれば大体の場合は十分である。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;cm&#34;&gt;/* Select the SLD Hub */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_dr_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、Select_DRにて、DR(&lt;code&gt;SLD HUB Configuration register&lt;/code&gt;)を選択する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;cm&#34;&gt;/* Select VDR */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_execute_queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;jtag_execute_queue&lt;/code&gt;にて、JTAGコマンドを実行する。&lt;/p&gt;
&lt;p&gt;次に、&lt;code&gt;SLD HUB Configuration register&lt;/code&gt;を読み出す。
レジスタのフォーマットは以下のとおりである。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image01.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image01.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
8つのnibbleのフィールドからなるレジスタであり、nibble単位での読み出しが必須となる。:w
次のnibbleを読み出す前に、UPDATE_DRをする必要がある。
そこで、読み出しごとに&lt;code&gt;jtag_execute_queue&lt;/code&gt;を行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;n&#34;&gt;uint8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nibble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nibble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;jtag_add_dr_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_execute_queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nibble&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NB_NODES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M_WIDTH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;SLD HUB Configuration register&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;------------------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;m_width         = %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;manufacturer_id = 0x%02&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIx32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MANUF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;nb_of_node      = %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version         = %&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIu32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hub_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;VIR length      = %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guess_addr_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで、sld_nodeの数、m, nのサイズ、VIRのサイズなどがわかった。&lt;/p&gt;
&lt;p&gt;次に、インデックス(VJTAGのインスタンス時にユーザもしくはQuartusが割当)からアドレスへのマッピングを調べる。
&lt;code&gt;SLD_NODE info Register&lt;/code&gt;に情報が格納されており、sld_nodeの数分存在する。
このレジスタも同様に8つのnibbleからなる。
つまり、&lt;code&gt;ノードの数 * (8 * nibble)&lt;/code&gt;回シフトが必要である。&lt;/p&gt;
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image02.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image02.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag_node_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nibble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;jtag_add_dr_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_execute_queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ERROR_OK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;retval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nibble&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Node info register&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;--------------------&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;instance_id     = %&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIu32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;manufacturer_id = 0x%02&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIx32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MANUF&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;node_id         = %&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIu32&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; (%s)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
						       &lt;span class=&#34;n&#34;&gt;id_to_string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)));&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;version         = %&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRIu32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;VJTAG_NODE_ID&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;vjtag_node_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node_index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vjtag_node_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LOG_ERROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No VJTAG TAP instance found !&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでアドレスがわかった。
次に、sld_nodeのインスタンスのVIR, VDRにアクセスをする。&lt;/p&gt;
&lt;p&gt;まず、&lt;code&gt;USER1&lt;/code&gt;命令を発行する。
これにより、IR chainが選択される。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;	&lt;span class=&#34;cm&#34;&gt;/* Select VIR */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、sld_nodeのVIRに命令を送る。
この場合はDEBUG命令を転送している。
これは、or1kのデバックモードの命令の様子。
なお、転送サイズは&lt;code&gt;アドレスのサイズ+VIRのサイズ&lt;/code&gt;である。
VIRの前に、Addressを付与する。
フォーマットを以下に示す。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image03.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image03.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* Send the DEBUG command to the VJTAG IR */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guess_addr_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vjtag_node_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALT_VJTAG_CMD_DEBUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_dr_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後に、&lt;code&gt;USER0&lt;/code&gt;命令を発行して、DR chainに切り替える。
これにより、後続のShift_DEは、&lt;code&gt;USER1&lt;/code&gt;命令でセットした、Addrを用いてsld_nodeのインスタンスに転送される。
なお、or1kの場合では、VIRをDEBUGから変えることはないようである。
しかし、VIRを変える場合は、&lt;code&gt;USER1&lt;/code&gt;を発行して、ADDR+VIRを転送し、&lt;code&gt;USER0&lt;/code&gt;へ切り替えるという手順が必要となる。
この切り替え部分をRISC-VのOpenOCDへ追加する必要がある。
DRのアクセスは切り替えが正しくできていれば、問題ないはずである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* Select the VJTAG DR */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;jtag_execute_queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;openocd-vjtag-support&#34;&gt;OpenOCD VJTAG support&lt;/h3&gt;
&lt;p&gt;詳しい追加は&lt;a href=&#34;https://github.com/koyamanX/riscv-openocd&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;koyamanX/riscv-openocd&lt;/a&gt;
にある、
&lt;code&gt;src/target/riscv/riscv_tap_vjtag.c&lt;/code&gt;を確認してほしい。
初期化用のコードは、&lt;code&gt;or1k_tap_vjtag_init&lt;/code&gt;をそのまま流用する。
関数名を&lt;code&gt;riscv_tap_vjtag_init&lt;/code&gt;とする。
また、DEBUGレジスタの指定を、DTMCSレジスタの指定に変更する。
これで初期化は十分である。
一部、変数(nb_nodesなど)を雑にグローバル変数にした。
また、VIRの書き込み用の関数を別に定義した。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/target/riscv/riscv_tap_vjtag.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vjtag_vir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_tap&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uint32_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vir_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uint8_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;scan_field&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Select VIR chain */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Set VIR Value to the VIR of sld_node determined by vjtag_node_address */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;guess_addr_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nb_nodes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vjtag_node_address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vir_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dr_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_dr_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Select the VJTAG DR chain */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;buf_set_u32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ALTERA_CYCLONE_CMD_USER0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_bits&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_value&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;jtag_add_ir_scan&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TAP_IDLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;jtag_execute_queue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;src/target/riscv/riscv.c&lt;/code&gt;を変更し、targetの初期化の際に、ついでに&lt;code&gt;riscv_tap_vjtag_init&lt;/code&gt;を呼び出すことにした。
また、&lt;code&gt;use_vjtag&lt;/code&gt;フラグで、VJTAGを使用するかをハードコードした。
本来は、このフラグを&lt;code&gt;tap_select&lt;/code&gt;のような命令で変更できるようにするべきである。
しかし、&lt;code&gt;target&lt;/code&gt;固有のコマンドは&lt;code&gt;target&lt;/code&gt;の初期化が終わっていこうに使えるようになる。
ただし、&lt;code&gt;target&lt;/code&gt;初期化の処理は、&lt;code&gt;examine&lt;/code&gt;(JTAGでDebug Moduleへアクセスし、dmactiveを取得する)が成功したら
正しく完了したこととなる。
VJTAGを用いたアクセスでないため、必ず失敗する。
そこで、とりあえず、動けばいいという適当な考えで、ハードコードしてしまった。
正しく動くことが確認できたら、しっかりと対応しテストしてPRを出したいね。&lt;/p&gt;
&lt;h3 id=&#34;通信テスト&#34;&gt;通信テスト&lt;/h3&gt;
&lt;p&gt;VJTAGとOpenOCDでやり取りをする。
適当なDebug Moduleのような回路を書く。
コードは&lt;a href=&#34;https://github.com/koyamanX/riscv-debug&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;koyamanX/riscv-openocd&lt;/a&gt;
にある。
なお、DM(Debug Module)やDTM(Debug Transport Module)はJTAGのTCKのクロックドメインで動作していることに注意。
プロセッサと接続するためには、適切にCDC(Clock Domain Crossing)を行う必要がある。
また、DMに関しては、まだスタブである。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/dtm.nsl&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef DTM_H
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DTM_H
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/* This module design to run in TCK in JTAG clock domain */&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/* m_clock must be connected to TCK of JTAG */&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#define IDCODE		5&amp;#39;b00001
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DTMCS		5&amp;#39;b10000
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI			5&amp;#39;b10001
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define BYPASS		5&amp;#39;b11111
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define DTMCS_VERSION	4&amp;#39;b0001
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DTMCS_ABITS		6&amp;#39;b100000
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define DMI_NOP			2&amp;#39;b00
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_READ		2&amp;#39;b01
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_WRITE		2&amp;#39;b10
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_RESERVED	2&amp;#39;b11
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define DMI_STAT_SUCCESS	2&amp;#39;b00
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_STAT_RESERVED	2&amp;#39;b01
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_STAT_FAILURE	2&amp;#39;b10
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DMI_STAT_INPROGRESS	2&amp;#39;b11
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;zero1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dmihardreset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dmireset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;zero0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dmistat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;abits&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_clock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* DMI */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifdef DEBUG
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;src/dtm.nsl&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;dtm.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IDCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* IDECODE (defined by spec) */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x10e31913&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* same as SiFive&amp;#39;s */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bypass&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	
	&lt;span class=&#34;cm&#34;&gt;/* DTMCS register */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtmcs_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b00000000000000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DTMCS_ABITS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DTMCS_VERSION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* DTMCS internal register for read via dtmcs(Capture-DR) */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmistat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmireset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmihardreset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* DMI register */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dmi_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* DMI internal register for read via dmi(Capture-DR) */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_op_stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nl&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;IDCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* At this point, we can issue abstarct command */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DTMCS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
				&lt;span class=&#34;cm&#34;&gt;/* TODO: Implement hardreset */&lt;/span&gt;
				&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmihardreset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
					&lt;span class=&#34;nl&#34;&gt;dtmcs_dmireset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmireset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
					&lt;span class=&#34;nl&#34;&gt;dtmcs_dmireset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
					&lt;span class=&#34;nl&#34;&gt;dmi_op_stat&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI_NOP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;dmi_op_stat&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DMI_STAT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI_READ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
						&lt;span class=&#34;nl&#34;&gt;dmi_addr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
						&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
					&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI_WRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
						&lt;span class=&#34;nl&#34;&gt;dmi_addr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
						&lt;span class=&#34;nl&#34;&gt;dmi_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
						&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
					&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;op&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI_RESERVED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;dmi_op_stat&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DMI_STAT_FAILURE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;}&lt;/span&gt;
				&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
			&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ready&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nl&#34;&gt;dmi_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;nl&#34;&gt;dmi_op_stat&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DMI_STAT_SUCCESS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DTMCS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;dtmcs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmihardreset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmireset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; 
									&lt;span class=&#34;n&#34;&gt;dtmcs_idle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs_dmistat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DTMCS_ABITS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DTMCS_VERSION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;dmi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dmi_addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi_op_stat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;IDCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;idcode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x10e31913&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;BYPASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;bypass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;bypass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DTMCS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;dtmcs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]};&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;dmi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;65&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]};&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;IDCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;idcode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;31&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]};&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;BYPASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;bypass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;bypass&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DTMCS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;DMI&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;BYPASS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bypass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ir&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;IDCODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bypass&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifdef DEBUG
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtmcs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;src/dm.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef DM_H
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define DM_H
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/* Runs in same clock domain as DTM and output to hart must be 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	synchronized to hart&amp;#39;s clock domain */&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_clock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* DMI */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_in&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifdef DEBUG
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;src/dm.nsl&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;dm.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dm&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;reg&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmcontrol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;dmcontrol&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x10&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmcontrol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifdef DEBUG
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dmcontrol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;vjtag.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;dtm.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;#34;dm.h&amp;#34;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DE10&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SW&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LEDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DE10&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;vjtag&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dm&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_clock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_clock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ready&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ready&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifdef DEBUG
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;SW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LEDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dtm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;SW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LEDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;riscv_dm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;debug_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;LEDR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xffffffff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;動作確認&#34;&gt;動作確認&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/koyamanX/riscv-debug&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;koyamanX/riscv-openocd&lt;/a&gt;
&lt;/p&gt;
&lt;h4 id=&#34;ツールのビルド&#34;&gt;ツールのビルド&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone --recursive https://github.com/koyamanX/riscv-debug &lt;span class=&#34;c1&#34;&gt;#riscv-vjtag branch(by default)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; riscv-debug/riscv-openocd
git submodule update --init --recursive
./bootstrap
mkdir build
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; build
../configure --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/opt/riscv-openocd
make -j &lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;nproc&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;rv32xsoc.cfg&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set _ENDIAN little
set _CHIPNAME riscv
set _FPGATAPID 0x031050dd
set _TARGETNAME $_CHIPNAME.cpu

adapter driver usb_blaster
usb_blaster_lowlevel_driver ftdi

jtag newtap $_CHIPNAME cpu -irlen 10 -expected-id $_FPGATAPID
target create $_TARGETNAME riscv -endian $_ENDIAN -chain-position $_TARGETNAME

#use_vjtag
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;fpgade10-liteへ実装&#34;&gt;FPGA(DE10-Lite)へ実装&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; riscv-debug/fpga
make all
make download
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;テスト&#34;&gt;テスト&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo /opt/riscv-openocd/bin/openocd -f ../tcl/target/rv32xsoc.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;実行結果&#34;&gt;実行結果&lt;/h4&gt;
&lt;p&gt;dmactiveに成功している。(dmcontrolの0ビット目)
dmstatusのリードに失敗しているが、実装していないので期待通り。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image04.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image04.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;次からは、DMの仕様読みと実装を行う。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My RISC-V debug feature part2</title>
      <link>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part2/</link>
      <pubDate>Sat, 17 Apr 2021 11:21:32 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part2/</guid>
      <description>&lt;p&gt;今回はIntel FPGAのVJTAGのIPを試してみる。
FPGAボードはDE10 Liteを使用する。&lt;/p&gt;
&lt;h3 id=&#34;jtagjoint-test-action-group&#34;&gt;JTAG(Joint Test Action Group)&lt;/h3&gt;
&lt;p&gt;JTAGについては以下のサイトがわかりやすい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tokudenkairo.co.jp/jtag/adv2018/01.php&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;12月1日 JTAGとは何か&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tokudenkairo.co.jp/jtag/adv2018/02.php&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;12月2日 JTAGの信号線と波形&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tokudenkairo.co.jp/jtag/adv2018/03.php&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;12月3日 データレジスタと命令レジスタ&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tokudenkairo.co.jp/jtag/adv2018/04.php&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;12月4日 TAPステートマシン&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.tokudenkairo.co.jp/jtag/adv2018/05.php&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;12月5日 データレジスタの切り替えと、プライベート命令&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/shangdawei/p/4753682.html&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;JTAG – A technical overview and Timing&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JTAGを用いると、ICの端子を操作したり、ICの内部と通信ができるようになる。
もともと、JTAGはICの端子を操作するバウンダリースキャンのために作られたようである。
IEEE1149.1は4本の信号線でIC内部と通信するための、プロトコルを定めた規格である。
今回は、バウンダリースキャンは行わない。プロセッサの内部の状態をriscv-debug-specに沿って操作することを目標とする。
なお、riscv-debug-specでは、Debug Transport(情報のやり取り)には規定はないが、JTAGの例が乗っている。
例に乗っ取り、今回は、JTAGを用いる。&lt;/p&gt;
&lt;p&gt;JTAGはIRレジスタとDRレジスタがある。
これらはシフトレジスタであり、Shift-IR, Shift-DRにてシフトする。
IRは主にDRの命令(アドレス)を保持する。
IRは最低2ビット必要である。&lt;/p&gt;
&lt;h4 id=&#34;実装の必須な命令は以下である&#34;&gt;実装の必須な命令は以下である。&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;BYPASS&lt;/li&gt;
&lt;li&gt;SAMPLE&lt;/li&gt;
&lt;li&gt;PRELOAD&lt;/li&gt;
&lt;li&gt;EXTEST&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;オプションな命令&#34;&gt;オプションな命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;IDCODE&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;今回使用する命令&#34;&gt;今回使用する命令&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;BYPASS&lt;/li&gt;
&lt;li&gt;IDCODE
なお、バウンダリースキャンはサポートしない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なお、IRレジスタを読み出すときは、前回の値でなくステータスが帰る。
ステータスは下位２ビットが&lt;code&gt;01&lt;/code&gt;であること以外は実装定義である。
DRはIRによって選択する。
DRの長さは実装定義で、制御用のソフトウエアはシフト回数を適切に行う必要がある。
なお、仕様で規定されている必須のDRが存在する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDCODE(IR: 任意)
&lt;ul&gt;
&lt;li&gt;JTAGのIDコードを保持する(32 bit)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BYPASS(IR: すべてのビットが１)
&lt;ul&gt;
&lt;li&gt;1 bitのレジスタ&lt;/li&gt;
&lt;li&gt;実装していない命令などはこちらへ書き込むことが推奨されている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jtag信号線&#34;&gt;JTAG信号線&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;TCK (Test Clock)
&lt;ul&gt;
&lt;li&gt;クロック信号&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TMS (Test Mode Select)
&lt;ul&gt;
&lt;li&gt;次のステートを決める&lt;/li&gt;
&lt;li&gt;5回以上1を入力するとリセットすることができる&lt;/li&gt;
&lt;li&gt;TCKの立ち上がりエッジ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TDI (Test Data-In)
&lt;ul&gt;
&lt;li&gt;データ入力&lt;/li&gt;
&lt;li&gt;TCKの立ち上がりエッジ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TDO (Test Data-Out)
&lt;ul&gt;
&lt;li&gt;データ出力&lt;/li&gt;
&lt;li&gt;TCKの立ち下がりエッジ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;state-machine-of-jtag-tap&#34;&gt;State machine of JTAG TAP&lt;/h3&gt;
&lt;p&gt;JTAGの状態はTAP(Test Access Port)が管理する。
16のステートを持ち、現在の状態とTMSにより次のステートが決まる。
ステートマシン図を以下に示す。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image01.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image01.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;select&#34;&gt;Select&lt;/h4&gt;
&lt;p&gt;Select_IRの場合は、IRをオペレーション対象とする。
Select_DRの場合は、DR Chainを選択し、IRにて、各DRを選択する。&lt;/p&gt;
&lt;h4 id=&#34;shift&#34;&gt;Shift&lt;/h4&gt;
&lt;p&gt;Shift_DR, Shift_IRにてシフトレジスタをシフトする。
Shift_DRの場合は、IRの値に応じて、DRが選択され、シフトされる。
TDIはMSBへ、LSBはTDOへ接続される。
Shift_IRはIRをシフトする。
TDIはMSBへ、ステータス(IRの値ではないことに注意)のLSBはTDOへ接続される。&lt;/p&gt;
&lt;h4 id=&#34;capture&#34;&gt;Capture&lt;/h4&gt;
&lt;p&gt;Capture_DRでは、IRで選択する、DRにパラレルで値を代入する。
Capture_IRでは、IRへパラレルで値を代入する。
処理の結果やステート、初期値などをこのステートでDR/IRへ転送する。&lt;/p&gt;
&lt;h4 id=&#34;update&#34;&gt;Update&lt;/h4&gt;
&lt;p&gt;Updateでは、並列でDRもしくはIRの値を内部ロジックへコピーする。
なにか、処理をする場合はこのステートで実行する。(RISC-V DebugのDTMにおけるDMI Write・Readなど)&lt;/p&gt;
&lt;p&gt;重要なステートはUpdate, Capture, Shift、Selectである。
なお、アプリケーションはDRの長さや現在の値、ステートについてしっかり把握して制御する必要がある。
ステートに関して、どのステートからでも、TMSを５回以上1にしておくことで初期状態へ戻ることができる。&lt;/p&gt;
&lt;h3 id=&#34;virtual-jtag&#34;&gt;Virtual JTAG&lt;/h3&gt;
&lt;p&gt;今回はVJTAGのIPを使用する。
VJTAGを用いると、Download Cable(USB-Blaster)を用いて、FPGAとPC間のJTAG通信ができる。
VJTAGとJTAGの違いは、あまりなく、実際はJTAGと同じ制御をしている。
しかし、VJTAGのインスタンスは最大255個作成できるため、これらを識別する機能が必要である。
各インスタンスにはユニークなインデックス(アドレス)が割り当てられ(ユーザが指定可能、指定しない場合はQuartusが合成時に自動割当）
これを用いて、識別する。
FPGAのデザイン内で、通信のルーティングを行う仕組みとして、sld_hubがぞんざいする。
各VJTAGのインスタンスはsld_nodeとなり、sld_hubに接続される。
以下にブロック図を示す。
&lt;a href=&#34;https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/ug/ug_virtualjtag.pdf&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;ここより&lt;/a&gt;
引用
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
よって、アプリケーションはsld_hubを介して、ユーザロジックのVJTAGインスタンス(sld_node)へアクセスする。
なお、１つしかインスタンスが存在しない場合でも、sld_hubは生成される。
また、sld_node, sld_hubはLEs(Logic Element)を消費する。
JTAG TAPは物理ハードウェアとして実装されている。
以下に、sld_hubおよびsld_nodeの内部ブロック図を図示する。&lt;/p&gt;
&lt;p&gt;IPのドキュメントは以下のリンクより閲覧できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.intel.com/content/dam/www/programmable/us/en/pdfs/literature/ug/ug_virtualjtag.pdf&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Virtual JTAG Intel® FPGA IP Core User Guide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.intel.co.jp/content/www/jp/ja/programmable/documentation/bhc1411109490717.html&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;仮想JTAG（altera_virtual_jtag)IP コアのユーザーガイド&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;virtual-jtagのインスタンスの作成&#34;&gt;Virtual JTAGのインスタンスの作成&lt;/h4&gt;
&lt;p&gt;Quartus Megafunctionを使って、Virtual JTAGのインスタンスファイル？を作る。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-verilog&#34; data-lang=&#34;verilog&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// vjtag.v
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;// Generated using ACDS version 20.1 711
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;no&#34;&gt;`timescale&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ps&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;module&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// jtag.tdi
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//     .tdo
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;//     .ir_in
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;input&lt;/span&gt;  &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;//     .ir_out
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_cdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_sdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_e1dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_pdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_e2dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_udr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_cir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_uir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;tms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//     .tms
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_tlr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_tlr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_rti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_rti
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_sdrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sdrs
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_cdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e1dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_pdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e2dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_udr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_sirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sirs
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_cir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_sir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_e1ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e1ir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_pir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_pir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_e2ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e2ir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;jtag_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_uir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;output&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;wire&lt;/span&gt;       &lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//  tck.clk
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;sld_virtual_jtag&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;#(&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sld_auto_instance_index&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;YES&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sld_instance_index&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sld_ir_width&lt;/span&gt;            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;virtual_jtag_0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// jtag.tdi
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//     .tdo
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;              &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;//     .ir_in
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;             &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;//     .ir_out
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_cdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_sdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_e1dr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_e1dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_pdr&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_pdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_e2dr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_e2dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_udr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_cir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//     .virtual_state_uir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tms&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//     .tms
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_tlr&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_tlr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_tlr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_rti&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_rti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_rti
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sdrs&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sdrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sdrs
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_cdr&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_cdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sdr&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e1dr&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e1dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_pdr&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_pdr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e2dr&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e2dr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_udr&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_udr
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sirs&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sirs
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_cir&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_cir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sir&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_sir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_sir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e1ir&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e1ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e1ir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_pir&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_pir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_pir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e2ir&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_e2ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_e2ir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_uir&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jtag_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;//     .jtag_state_uir
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//  tck.clk
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;endmodule&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NSLから使えるようにヘッダーファイルを書く。
なお、クロック供給などは不要で、合成時にうまくやってくれる。
ちなみに、JTAGのコントローラーは別に実装されているらしく、クロックやtdi, tdoなどの信号は
sld_hubなどに供給されるようである。
しかし、VJTAGのインスタンス(sld_node)や(sld_hub)はロジックエレメントを消費する。
&lt;code&gt;jtag_*&lt;/code&gt;の信号はデバック用途であり、使用不可である。
この信号はJTAGのコントローラーから来ている。
&lt;code&gt;virtual_*&lt;/code&gt;の信号はVJTAGのステートマシンの状態である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;declare&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vjtag&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;tdi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;tdo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ir_in&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ir_out&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;virtual_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;tms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_tlr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_rti&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_sdrs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_cdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_sdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_e1dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_pdr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_e2dr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_udr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_sirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_cir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_sir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_e1ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_pir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_e2ir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;func_out&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;jtag_state_uir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;output&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;tck&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;vjtagとの通信&#34;&gt;VJTAGとの通信&lt;/h3&gt;
&lt;p&gt;VJTAGのインスタンスと通信するには、まずsld_hubと通信をする必要がある。
sld_hubには２つのオペレーションが定義されている。
なお、sld_hubのIRはインスタンスによらず、10bitである。
sld_hubに接続されているインスタンスの情報を取り出すことができるが、今回は省略する。
ドキュメントおよび&lt;code&gt;riscv-openocd/src/target/riscv/riscv_tap_vjtag.c&lt;/code&gt;を見てほしい。
なお、VJTAGのインスタンスのIR/DRはsld_hubのサブセットという形な模様。
そのため、それぞれVIR(Virtual IR)およびVDR(Virtual DR)と呼ばれている。
ブロック図を以下に示す(仕様から書き起こしたので、もしかしたら間違いがあるかもしれない）。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image02.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image02.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;なお、sld_hubには、２つの命令がある。
これは、Shift_IRを用いてsld_hubのIR(10 bit)へ書き込むことで命令を発行できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;USER0
VDRのパスを選択する。&lt;/li&gt;
&lt;li&gt;USER1
VIRのパスを選択する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenOCDでは、or1kのみVJTAGに対応している。
次からは、OpenOCDのRISC-VターゲットにVJTAGサポートを行う。
その後、実際にOpenOCDからVJTAG on DE10-Liteに通信ができるかテストをする。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My RISC-V debug feature part1</title>
      <link>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part1/</link>
      <pubDate>Tue, 06 Apr 2021 10:39:30 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/my_riscv_debug_feature_part1/</guid>
      <description>&lt;p&gt;RISC-VプロセッサのシミュレータはVerilog HDLからVerilatorにてC++へ変換して、ソフトウエアとして構築している。
そろそろまともな実機テスト環境を整えたくなってきたので、FPGA上で検証できるシステムを構築する。&lt;/p&gt;
&lt;h2 id=&#34;デバック環境の検討&#34;&gt;デバック環境の検討&lt;/h2&gt;
&lt;p&gt;RISC-Vでは、RISC-V Debug Mode&lt;a href=&#34;https://github.com/riscv/riscv-debug-spec&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;RISC-V debug spec&lt;/a&gt;
が定義されている。
この仕様では、デバック用の機能をまとめており、gdbなどはこの機能が実装されていることを前提としている。
オレオレの仕様でも良さそうではあるけれど、ツールをの移植など対応させるのが非常にめんどうくさい。
そこで、RISC-V Debugに沿った実装を行う。
これは、通信のプロトコルについては規定していない。
プロトコルはJTAGやSWDなどいろいろあるが、大体はOpenOCDが頑張ってくれる。
Intel FPGAの場合は、Virtual JTAGがあって、デザインの中でインスタンス化すると、USB Blasterケーブルを通してモジュールと通信できるよう。&lt;/p&gt;
&lt;p&gt;そこで、今回はUSBケーブルを通して、JTAG(VJTAG)にてFPAG &amp;lt;-&amp;gt; PC間の通信をする。
制御用のソフトウエアはOpenOCDを用いる。
デバッカはgdbを用いる。
今回実装すべきなのは、VJTAG &amp;lt;-&amp;gt; RISC-V間のデータパスと制御である。&lt;/p&gt;
&lt;p&gt;RISC-V Debugの仕様では、以下の図に対応する。
Debug Transport HardwareはUSBダウンロードケーブルとなる。
DTMでは、VJTAGで受け取ったデータをデバック用の命令に変換し、DMIというバスを通して、DMへ送る。
DMは命令をもとに、プロセッサの状態を制御する。
プロセッサはデバックモードの実装が必要となる。
なお、点線の部分は任意の実装となる。
とりあえず、最小限の実装をする。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;やること&#34;&gt;やること&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;仕様の調査&lt;/li&gt;
&lt;li&gt;実装の調査&lt;/li&gt;
&lt;li&gt;VJTAGの調査とテスト&lt;/li&gt;
&lt;li&gt;OpenOCDを使った、VJTAGの制御&lt;/li&gt;
&lt;li&gt;Debug modeの実装&lt;/li&gt;
&lt;li&gt;DTM, DMの実装&lt;/li&gt;
&lt;li&gt;gdbによる実機テスト&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こんな感じで進めていく。
まずは、Debug specをしっかり読んでいく。前に読んだときはさっぱりで諦めた(小声)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part6</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part6/</link>
      <pubDate>Fri, 02 Apr 2021 13:59:10 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part6/</guid>
      <description>&lt;p&gt;&lt;code&gt;handle_exception&lt;/code&gt;の続きを読んでいく。&lt;/p&gt;
&lt;h2 id=&#34;handle_exception&#34;&gt;handle_exception&lt;/h2&gt;
&lt;p&gt;global pointerのロードから。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;push&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;norelax&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;gp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__global_pointer$&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pop&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_TRACE_IRQFLAGS
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trace_hardirqs_off&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_CONTEXT_TRACKING
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;previous&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;context_tracking_user_exit.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt;   &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_PP&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;skip_context_tracking&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;context_tracking_user_exit&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;skip_context_tracking:&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;MSB&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cause&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;differentiates&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;between&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;interrupts&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exceptions&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bge&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ret_from_exception&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Handle&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;interrupts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;move&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pt_regs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handle_arch_irq&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;jr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_TRACE_IRQFLAGS
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trace_hardirqs_on&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Exceptions&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;interrupts&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;enabled&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;disabled&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;depending&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_PIE&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sstatus.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_PIE&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;beqz&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_IE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;gp&lt;/code&gt;をロードする。global pointerはリロケーション済みになる。
トラッキングについては省く。
次に、&lt;code&gt;s4&lt;/code&gt;レジスタ(&lt;code&gt;scause&lt;/code&gt;)の最上位ビットを調べる。
最上位ビットが立っているときは割込みである。
&lt;code&gt;bge s4, zero, 1f&lt;/code&gt;で確かめている。
例外の場合は、&lt;code&gt;1:&lt;/code&gt;である。&lt;/p&gt;
&lt;p&gt;まずは、例外の処理を見ていく。&lt;/p&gt;
&lt;h3 id=&#34;例外の処理&#34;&gt;例外の処理&lt;/h3&gt;
&lt;p&gt;sstatus(&lt;code&gt;s1&lt;/code&gt;)にpie(Previous Interrupt Enable)が立っているか調べる。
例外発生時に割込みが有効であったか調べる。
もし、&lt;code&gt;sstatus.pie&lt;/code&gt;が0であれば、&lt;code&gt;sstatus.sie&lt;/code&gt;をセットする。&lt;/p&gt;
&lt;p&gt;次にリターンアドレスをセットする。(&lt;code&gt;ret_from_exception&lt;/code&gt;)
&lt;code&gt;s4&lt;/code&gt;(&lt;code&gt;scause&lt;/code&gt;)が&lt;code&gt;EXC_SYSCALL&lt;/code&gt;であるか調べる。
その場合は、システムコールなので&lt;code&gt;handle_syscall&lt;/code&gt;へ分岐する。
その他の例外の場合は、&lt;code&gt;excp_vect_table&lt;/code&gt;を索引する。
&lt;code&gt;s4&lt;/code&gt;(&lt;code&gt;scause&lt;/code&gt;)を右に二回(RV32の場合は、&lt;code&gt;RISCV_LGPTR&lt;/code&gt;は&lt;code&gt;2&lt;/code&gt;、&lt;code&gt;arch/riscv/include/asm/asm.h&lt;/code&gt;)左にシフトする。
&lt;code&gt;a0&lt;/code&gt;に&lt;code&gt;pt_regs&lt;/code&gt;のポインタをセットし、&lt;code&gt;excp_vect_table&lt;/code&gt;〜&lt;code&gt;excp_vect_table_end&lt;/code&gt;の間にあるかをみて、索引する。
その後、レジスタ相対ジャンプを行う。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;excp_vect_table&lt;/code&gt;〜&lt;code&gt;excp_vect_table_end&lt;/code&gt;の間にインデックス(&lt;code&gt;t0&lt;/code&gt;)が収まらない場合は、&lt;code&gt;1:&lt;/code&gt;へ分岐し、&lt;code&gt;do_trap_unknown&lt;/code&gt;を実行する。&lt;/p&gt;
&lt;h4 id=&#34;excp_vect_table&#34;&gt;excp_vect_table&lt;/h4&gt;
&lt;p&gt;システムコール以外の、各例外のハンドラは&lt;code&gt;excp_vect_table&lt;/code&gt;に登録されている。
索引する際に、範囲外であれば、&lt;code&gt;do_trap_unknown&lt;/code&gt;となる。
&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#ifndef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define do_page_fault do_trap_unknown
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.section&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;.rodata&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;excp_vect_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_insn_misaligned&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_insn_fault&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_insn_illegal&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_break&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_load_misaligned&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_load_fault&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_store_misaligned&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_store_fault&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_ecall_u&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;gets&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;intercepted&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_ecall_s&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_unknown&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_ecall_m&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_page_fault&lt;/span&gt;   &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;instruction&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_page_fault&lt;/span&gt;   &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_trap_unknown&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RISCV_PTR&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_page_fault&lt;/span&gt;   &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;store&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;excp_vect_table_end:&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;excp_vect_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;handle_syscall&#34;&gt;handle_syscall&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nl&#34;&gt;handle_syscall:&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#if defined(CONFIG_TRACE_IRQFLAGS) || defined(CONFIG_CONTEXT_TRACKING)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Recover&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;calls&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	 &lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;initial&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;A0&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;needed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;signal&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handlers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_ORIG_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Advance&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SEPC&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;avoid&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;executing&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;original&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;instruction&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sret&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;addi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0x4&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_EPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Trace&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscalls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;requested&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;user.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_SYSCALL_WORK&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handle_syscall_trace_enter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;a0&lt;/code&gt;レジスタを&lt;code&gt;pt_regs-&amp;gt;orig_a0&lt;/code&gt;に保存する。
&lt;code&gt;sepc&lt;/code&gt;(&lt;code&gt;s2&lt;/code&gt;)を+4して、&lt;code&gt;pt_regs-&amp;gt;epc&lt;/code&gt;に保存する。&lt;/p&gt;
&lt;p&gt;次に、&lt;code&gt;thread_info-&amp;gt;flags&lt;/code&gt;を取り出し、システムコールをトレースが必要か調べる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/thread_info.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;thread&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;information&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;process&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;various&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assembly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;may&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;   &lt;span class=&#34;nf&#34;&gt;access&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pending&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;work-to-be-done&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;lowest&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;half-word&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;upper&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;half-word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_NOTIFY_RESUME	1	/* callback before returning to user */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SIGPENDING		2	/* signal pending */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_NEED_RESCHED	3	/* rescheduling necessary */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_RESTORE_SIGMASK	4	/* restore signal mask in do_signal() */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_MEMDIE		5	/* is terminating due to OOM killer */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_TRACEPOINT  6       /* syscall tracepoint instrumentation */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_AUDIT	7	/* syscall auditing */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SECCOMP		8	/* syscall secure computing */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_TRACE	(1 &amp;lt;&amp;lt; TIF_SYSCALL_TRACE)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_NOTIFY_RESUME	(1 &amp;lt;&amp;lt; TIF_NOTIFY_RESUME)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SIGPENDING		(1 &amp;lt;&amp;lt; TIF_SIGPENDING)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_NEED_RESCHED	(1 &amp;lt;&amp;lt; TIF_NEED_RESCHED)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_TRACEPOINT	(1 &amp;lt;&amp;lt; TIF_SYSCALL_TRACEPOINT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_AUDIT	(1 &amp;lt;&amp;lt; TIF_SYSCALL_AUDIT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SECCOMP		(1 &amp;lt;&amp;lt; TIF_SECCOMP)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_WORK \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_TIF_SYSCALL_TRACE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_SYSCALL_TRACEPOINT&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_SYSCALL_AUDIT&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;
	 &lt;span class=&#34;nf&#34;&gt;_TIF_SECCOMP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;トレースが必要な場合は&lt;code&gt;handle_syscall_trace_enter&lt;/code&gt;に分岐する。
このパスは&lt;code&gt;ptrace&lt;/code&gt;に用いられる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Slow&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;paths&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptrace.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;handle_syscall_trace_enter:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;move&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_syscall_trace_enter&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;move&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ret_from_syscall_rejected&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;check_syscall_nr&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;handle_syscall_trace_exit:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;move&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do_syscall_trace_exit&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ret_from_exception&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この場合でも&lt;code&gt;check_syscall_nr&lt;/code&gt;を呼びだす。
よって、このパスはとりあえず無視する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nl&#34;&gt;check_syscall_nr:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Check&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;jump&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bogus&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;number.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__NR_syscalls&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sys_ni_syscall&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Syscall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;held&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;above&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;allowed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;redirect&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ni_syscall.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bge&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Check&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;rejected&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tracer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;i.e.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;yes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pretend&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;was&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;executed.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;beq&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ret_from_syscall_rejected&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;blt&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sys_call_table&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;slli&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISCV_LGPTR&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;jalr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;__NR_syscalls&lt;/code&gt;はシステムコール番号の最大値である。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/syscall_table.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#undef __SYSCALL
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define __SYSCALL(nr, call)	[nr] = (call),
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys_call_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__NR_syscalls&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__NR_syscalls&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys_ni_syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;asm/unistd.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;sys_ni_syscall&lt;/code&gt;は実装されていないシステムコールの処理である。
&lt;code&gt;kernel/sys_ni.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*  we can&amp;#39;t #include &amp;lt;linux/syscalls.h&amp;gt; here,
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    but tell gcc to not warn with -Wmissing-prototypes  */&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;asmlinkage&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sys_ni_syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Non-implemented system calls get redirected here.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;asmlinkage&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sys_ni_syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ENOSYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;システムコール発行の引数(&lt;code&gt;a7&lt;/code&gt;)のシステムコール番号が&lt;code&gt;__NR_syscalls&lt;/code&gt;より以上の場合は実装されていない。(&lt;code&gt;1:&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;システムコール番号(&lt;code&gt;a7&lt;/code&gt;)が&lt;code&gt;-1&lt;/code&gt;の場合は&lt;code&gt;ret_from_syscall_rejected&lt;/code&gt;へ分岐する。&lt;/p&gt;
&lt;p&gt;次にシステムコール番号(&lt;code&gt;a7&lt;/code&gt;)で&lt;code&gt;sys_call_table&lt;/code&gt;を索引し、ジャンプする。&lt;/p&gt;
&lt;h4 id=&#34;例外からの復帰&#34;&gt;例外からの復帰&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;nl&#34;&gt;ret_from_syscall&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Set user a0 to kernel a0 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PT_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * We didn&amp;#39;t execute the actual syscall.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Seccomp already set return value for the current task pt_regs.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * (If it was configured with SECCOMP_RET_ERRNO/TRACE)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;ret_from_syscall_rejected&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Trace syscalls, but only if requested by the user. */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TASK_TI_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_TIF_SYSCALL_WORK&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;handle_syscall_trace_exit&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;ret_from_exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PT_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;csrc&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CSR_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SR_IE&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifdef CONFIG_TRACE_IRQFLAGS
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trace_hardirqs_off&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef CONFIG_RISCV_M_MODE
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* the MPP value is too large to be used as an immediate arg for addi */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SR_MPP&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t0&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SR_SPP&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;resume_kernel&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、システムコールの戻り値を&lt;code&gt;pt_regs-&amp;gt;a0&lt;/code&gt;に保存し、割込みを無効にする。
次に移るモード(&lt;code&gt;sstatus.spp&lt;/code&gt;)をマスクする。
このモードが&lt;code&gt;0&lt;/code&gt;の場合はユーザーモードなので、&lt;code&gt;resume_userspace&lt;/code&gt;を実行する。
それ以外は&lt;code&gt;resume_kernel&lt;/code&gt;を実行する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#if IS_ENABLED(CONFIG_PREEMPTION)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;resume_kernel:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_PREEMPT_COUNT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;restore_all&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_NEED_RESCHED&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;beqz&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;restore_all&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;preempt_schedule_irq&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;restore_all&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;CONFIG_PREEMPTION&lt;/code&gt;を定義すると、プロセスコンテキストにおいてカーネル内のコードを実行中であっても他のプロセスにCPUを手放す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.bit-hive.com/linuxkernelmemo/pg/%E3%83%97%E3%83%AA%E3%82%A8%E3%83%B3%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;プリエンプション&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回は、&lt;code&gt;CONFIG_PREEMPTION&lt;/code&gt;を定義していないので、&lt;code&gt;resume_kernel&lt;/code&gt;の実体は&lt;code&gt;restore_all&lt;/code&gt;となる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#if !IS_ENABLED(CONFIG_PREEMPTION)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;resume_kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;restore_all&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nl&#34;&gt;restore_all:&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_TRACE_IRQFLAGS
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_PIE&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;beqz&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trace_hardirqs_on&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trace_hardirqs_off&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;2:&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;CONFIG_TRACE_IRQFLAGS&lt;/code&gt;は定義していないので、スキップする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;current&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservation&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;effectively&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;part&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;processor&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sense&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cannot&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;shared&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;between&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;different&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hart&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;contexts.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;We&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;actually&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;restore&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;reservation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;so&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;instead&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;here&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;existing&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;--&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;always&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;legal&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;implementations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;at&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;any&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;point&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;forward&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;progress&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;guarantee&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kept&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;we&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ll&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ignore&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;here&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Dangling&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;taking&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trap&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;middle&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;LR&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;SC&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sequence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;also&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;taken&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;forward&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;around&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SC&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;how&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;implement&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CAS.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;As&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;clear&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;between&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;last&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CAS&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;jump&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;back&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;context.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;While&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unlikely&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;store&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;completes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;implementations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;allowed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;expand&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reservations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;arbitrarily&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;large.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_EPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_SC&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_EPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_EPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_RA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_GP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_TP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_S0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_S1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_RISCV_M_MODE
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;mret&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;sret&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;SC&lt;/code&gt;(Store conditional)を発行して、&lt;code&gt;reservation&lt;/code&gt;をクリアする。
&lt;code&gt;reservation&lt;/code&gt;(&lt;code&gt;load reserved&lt;/code&gt;によりセット)はプロセッサのステートなので、復元が必要。（復元の代わりにSCを発行することでreservationをクリアする。
任意の大きさの場合は&lt;code&gt;AMO fault&lt;/code&gt;となるはず。)
&lt;code&gt;sstatus&lt;/code&gt;、&lt;code&gt;sepc&lt;/code&gt;、汎用レジスタを復元する。
システムコールの戻り値は&lt;code&gt;pt_regs-&amp;gt;a0&lt;/code&gt;に保存済みである。
最後に&lt;code&gt;sp&lt;/code&gt;を復元していることに注意。
その後、&lt;code&gt;sret&lt;/code&gt;を行い、例外元のカーネルへ復帰する。(&lt;code&gt;sstatus.spp == S-mode&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;次にユーザーモードへ戻る場合を見てみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nl&#34;&gt;resume_userspace:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Interrupts&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;must&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;disabled&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;here&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;so&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;checked&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;atomically&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_FLAGS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;current_thread_info-&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;andi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_WORK_MASK&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;work_pending&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_CONTEXT_TRACKING
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;context_tracking_user_enter&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Save&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unwound&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread_info&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;addi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_SIZE_ON_STACK&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_KERNEL_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Save&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TP&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;into&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;scratch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;so&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;find&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;structures&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;again.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;thread_info-&amp;gt;flags&lt;/code&gt;を見て、シグナル、コールバック、リスケジュールが必要な際には&lt;code&gt;work_pending&lt;/code&gt;を実行する。
それ以外の場合は、&lt;code&gt;s0&lt;/code&gt;にスタックポインタを戻したものを作成し、&lt;code&gt;task_struct&lt;/code&gt;の&lt;code&gt;kernel sp&lt;/code&gt;へ保存する。
&lt;code&gt;tp&lt;/code&gt;を&lt;code&gt;scratch&lt;/code&gt;とスワップし、カーネルのデータ構造へのポインタを&lt;code&gt;sscratch&lt;/code&gt;へ保存する。
その後は&lt;code&gt;restore_all&lt;/code&gt;と同じである。ただし、&lt;code&gt;sstatus-&amp;gt;spp == U-mode&lt;/code&gt;なので、ユーザースペースへ復帰する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/thread_info.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;thread&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;information&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;process&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;state&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;various&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assembly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;files&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;may&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;   &lt;span class=&#34;nf&#34;&gt;access&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pending&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;work-to-be-done&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;lowest&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;half-word&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;upper&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;half-word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_TRACE	0	/* syscall trace active */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_NOTIFY_RESUME	1	/* callback before returning to user */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SIGPENDING		2	/* signal pending */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_NEED_RESCHED	3	/* rescheduling necessary */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_RESTORE_SIGMASK	4	/* restore signal mask in do_signal() */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_MEMDIE		5	/* is terminating due to OOM killer */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_TRACEPOINT  6       /* syscall tracepoint instrumentation */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SYSCALL_AUDIT	7	/* syscall auditing */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define TIF_SECCOMP		8	/* syscall secure computing */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_TRACE	(1 &amp;lt;&amp;lt; TIF_SYSCALL_TRACE)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_NOTIFY_RESUME	(1 &amp;lt;&amp;lt; TIF_NOTIFY_RESUME)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SIGPENDING		(1 &amp;lt;&amp;lt; TIF_SIGPENDING)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_NEED_RESCHED	(1 &amp;lt;&amp;lt; TIF_NEED_RESCHED)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_TRACEPOINT	(1 &amp;lt;&amp;lt; TIF_SYSCALL_TRACEPOINT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SYSCALL_AUDIT	(1 &amp;lt;&amp;lt; TIF_SYSCALL_AUDIT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _TIF_SECCOMP		(1 &amp;lt;&amp;lt; TIF_SECCOMP)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define _TIF_WORK_MASK \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;_TIF_NOTIFY_RESUME&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_SIGPENDING&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_TIF_NEED_RESCHED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで、おおよそトラップ時の動作を見た。
トラップの処理自体を詳しく理解するには、&lt;code&gt;excp_vect_table&lt;/code&gt;、&lt;code&gt;sys_call_table&lt;/code&gt;、&lt;code&gt;do_trap_unknown&lt;/code&gt;、&lt;code&gt;handle_arch_irq&lt;/code&gt;を読む必要がある。
また、&lt;code&gt;work_pending&lt;/code&gt;や&lt;code&gt;ptrace&lt;/code&gt;関連のパスは読んでいないが、後に必要になるかもしれない。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part5</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part5/</link>
      <pubDate>Thu, 01 Apr 2021 21:49:28 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part5/</guid>
      <description>&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;、&lt;code&gt;relocate&lt;/code&gt;を読み終えたので、次は&lt;code&gt;start_kernel&lt;/code&gt;実行までを読んでいく。&lt;/p&gt;
&lt;h2 id=&#34;setup_trap_vector&#34;&gt;setup_trap_vector&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;setup_vm&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;early_pg_dir&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;relocate&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_MMU */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;setup_trap_vector&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Restore&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;C&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;environment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;init_task&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;sw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_CPU&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;init_thread_union&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;THREAD_SIZE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に呼ばれる関数は&lt;code&gt;setup_trap_vector&lt;/code&gt;である。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;na&#34;&gt;.align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;setup_trap_vector:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trap&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exception&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handler&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handle_exception&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_TVEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sup0&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;scratch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;indicating&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exception&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;presently&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;executing&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、&lt;code&gt;handle_exception&lt;/code&gt;のアドレスを&lt;code&gt;stvec&lt;/code&gt;にダイレクトモードとしてセットする。
&lt;code&gt;csrw CSR_SCRATCH, zero&lt;/code&gt;の&lt;code&gt;SSCRATCH&lt;/code&gt;の構造はよくわからないが、コメントによると&lt;code&gt;sup0&lt;/code&gt;が&lt;code&gt;0&lt;/code&gt;であると、カーネルモードとするらしい。
&lt;code&gt;handle_exception&lt;/code&gt;はどうなっているか見てみる。
かなり長い。
&lt;code&gt;arch/riscv/kernel/entry.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;handle_exception&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;coming&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;userspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;preserve&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;came&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;scratch&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;will&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;contain&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;continue&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;current&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TP.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_save_context&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;_restore_kernel_tpsp:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_KERNEL_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;_save_context:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_USER_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_KERNEL_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;addi&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PT_SIZE_ON_STACK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_RA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_GP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_T2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_S0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;PT_S1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x17&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_A7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x19&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x20&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x21&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x22&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x25&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x26&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x27&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_S11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x28&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x29&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x31&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_T6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Disable&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;user-mode&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;memory&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;access&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;actual&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;user&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;routines.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Disable&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;FPU&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;detect&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;illegal&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;usage&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;floating&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;point&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;space.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_SUM&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_FS&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;REG_L&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TASK_TI_USER_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrrc&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_EPC&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_TVAL&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_CAUSE&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrr&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_SP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_EPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_BADADDR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_CAUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PT_TP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;scratch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;register&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;so&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;recursive&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exception&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;occurs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exception&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;knows&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;came&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SCRATCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;カーネルモードからのトラップの場合は、&lt;code&gt;SSCRATCH&lt;/code&gt;は&lt;code&gt;0&lt;/code&gt;を示す。
また、&lt;code&gt;tp&lt;/code&gt;はカーネルモードのThread pointerとなる。(&lt;code&gt;_restore_kernel_tpsp&lt;/code&gt;)
一方、ユーザーモードからのトラップの場合は、&lt;code&gt;SSCRATCH&lt;/code&gt;はカーネルモードのThread Pointerを示す。
また、&lt;code&gt;tp&lt;/code&gt;の値はユーザーモードが使用している。
&lt;code&gt;tp&lt;/code&gt;にカーネルモードのThread Pointerをセットしたら、次にレジスタを保存する。
まず、ユーザーモードの&lt;code&gt;sp&lt;/code&gt;を保存し、カーネルモードの&lt;code&gt;sp&lt;/code&gt;をロードする。
次に、スタックを必要分確保し、汎用レジスタを保存する(&lt;code&gt;sp&lt;/code&gt;、&lt;code&gt;tp&lt;/code&gt;以外)。
&lt;code&gt;pt_regs&lt;/code&gt;構造体として保存する。
アセンブリ中ではオフセットは&lt;code&gt;PT_&lt;/code&gt;で表される。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/ptrace.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pt_regs&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;epc&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;gp&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tp&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t2&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a5&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a6&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a7&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s2&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s3&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s4&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s5&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s6&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s7&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s8&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s9&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s10&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s11&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t3&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t4&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t5&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t6&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Supervisor&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;Machine&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSRs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;badaddr&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cause&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;before&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;syscall&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;orig_a0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また、&lt;code&gt;TASK_TI&lt;/code&gt;で表される構造体は(&lt;code&gt;struct thread_info&lt;/code&gt;)であり、&lt;code&gt;task_struct&lt;/code&gt;構造体に組み込まれている。&lt;/p&gt;
&lt;p&gt;かなり長いので、最初の方だけ。
ちなみに、Linuxのプロセスは&lt;code&gt;task_struct&lt;/code&gt;にて表現される。
また、カーネルレベルのスレッドの実装にも使われる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.coins.tsukuba.ac.jp/~yas/coins/os2-2013/2013-12-26/&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;■Linux task構造体&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;include/linux/sched.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task_struct&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_THREAD_INFO_IN_TASK
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;For&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reasons&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;soup&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;see&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;current_thread_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()),&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;this&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;must&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;element&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task_struct.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread_info&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;thread_info&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unrunnable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;runnable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;stopped&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;volatile&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;state&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;begins&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;randomizable&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;portion&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task_struct.&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Only&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;scheduling-critical&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;items&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;added&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;above&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;here.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;randomized_struct_fields_start&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;void&lt;/span&gt;				&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;refcount_t&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;usage&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Per&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PF_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*),&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;defined&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;further&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;below&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;ptrace&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;thread_info&lt;/code&gt;構造体は&lt;code&gt;arch/riscv/include/asm/thread_info.h&lt;/code&gt;にある。
&lt;code&gt;arch/riscv/include/asm/thread_info.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;low&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry.S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;needs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;immediate&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;access&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fit&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entirely&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inside&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cache&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;line&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;members&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;changes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assembly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;constants&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;   &lt;span class=&#34;nf&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;asm-offsets.c&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;must&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;updated&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;accordingly&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;thread_info&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;included&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task_struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;offset&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;means&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;   &lt;span class=&#34;nf&#34;&gt;tp&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;points&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;both&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread_info&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;task_struct.&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;thread_info&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;		/* low level flags */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;int&lt;/span&gt;                     &lt;span class=&#34;no&#34;&gt;preempt_count&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;  /* 0=&amp;gt;preemptible, &amp;lt;0=&amp;gt;BUG */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;mm_segment_t&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;addr_limit&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;These&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointers&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;overwritten&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;every&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;system&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;exception.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;SP&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;also&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;saved&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;stack&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;recovered&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;when&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;overwritten.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;long&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;kernel_sp&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;	/* Kernel stack pointer */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;long&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;user_sp&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;	/* User stack pointer */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;int&lt;/span&gt;			&lt;span class=&#34;no&#34;&gt;cpu&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;メモリの構造を以下に示す。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;まず、User modeの&lt;code&gt;sp&lt;/code&gt;を&lt;code&gt;task_struct.thread_info.user_sp&lt;/code&gt;に保存し、
&lt;code&gt;sp&lt;/code&gt;に&lt;code&gt;task_struct.thread_info.kernel_sp&lt;/code&gt;を入れ、ユーザーモードのスタックからカーネルのスタックに切り替える。
&lt;code&gt;kernel_sp&lt;/code&gt;は&lt;code&gt;struct pt_regs&lt;/code&gt;を保持するメモリ領域のポインタとなっている。
&lt;code&gt;pt_regs&lt;/code&gt;へ&lt;code&gt;sp&lt;/code&gt;、&lt;code&gt;tp&lt;/code&gt;を覗いた汎用レジスタすべて保存する。&lt;/p&gt;
&lt;p&gt;次に、&lt;code&gt;t0&lt;/code&gt;にsstatus.SUM、sstatus.FSビットを1にする。
ユーザーモードのスタックポインタを&lt;code&gt;s0&lt;/code&gt;へ、
&lt;code&gt;s1&lt;/code&gt;に&lt;code&gt;sstatus&lt;/code&gt;を読み出し、同時に&lt;code&gt;t0&lt;/code&gt;レジスタで&lt;code&gt;sstatus&lt;/code&gt;をクリアする。
この段階で、Supervisor ModeでUビットのたった、ページにアクセスするとフォルトする。また、FPUは使用できない。
&lt;code&gt;s2&lt;/code&gt;に&lt;code&gt;sepc&lt;/code&gt;、&lt;code&gt;s3&lt;/code&gt;に&lt;code&gt;stval&lt;/code&gt;、&lt;code&gt;s4&lt;/code&gt;に&lt;code&gt;scause&lt;/code&gt;、&lt;code&gt;s5&lt;/code&gt;に&lt;code&gt;sscratch&lt;/code&gt;を読み込み、次に、&lt;code&gt;pt_regs&lt;/code&gt;構造体の所定の位置に保存する。
最後に、&lt;code&gt;sscratch&lt;/code&gt;に&lt;code&gt;zero&lt;/code&gt;をセットする。
これにて、再帰的なカーネルモードののトラップに対応できる。&lt;/p&gt;
&lt;p&gt;次は、グローバルポインタ(global pointer)のロードから読んでいく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part4</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part4/</link>
      <pubDate>Tue, 30 Mar 2021 22:23:30 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part4/</guid>
      <description>&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;の続きを読んでいく。&lt;/p&gt;
&lt;h2 id=&#34;setup_vm&#34;&gt;setup_vm&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;asmlinkage&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup_vm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;best_map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;va_pa_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;pfn_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Enforce boot alignment requirements of RV32 and
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * RV64 by only allowing PMD or PGD mappings.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Sanity check alignment and size */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Setup early PGD for fixmap */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#ifndef __PAGETABLE_PMD_FOLDED
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* Setup fixmap PMD */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pmd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PMD_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Setup trampoline PGD and PMD */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trampoline_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trampoline_pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pmd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trampoline_pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PMD_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_KERNEL_EXEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* Setup trampoline PGD */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trampoline_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_KERNEL_EXEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Setup early PGD covering entire kernel which will allows
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * us to reach paging_init(). We map all memory banks later
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * in setup_vm_final() below.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				   &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
				   &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_KERNEL_EXEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Create fixed mapping for early FDT parsing */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIX_FDT_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;create_pte_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				   &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)),&lt;/span&gt;
				   &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_KERNEL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Save pointer to DTB for early FDT parsing */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtb_early_va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_MASK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Save physical address for memblock reservation */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtb_early_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;
&lt;code&gt;setup_vm&lt;/code&gt;続き&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;best_map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;best_map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Upgrade to PMD_SIZE mappings whenever possible */&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PMD_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PMD_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PMD_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;load_pa&lt;/code&gt;は0x80400000である。
&lt;code&gt;load_sz&lt;/code&gt;はload addressの&lt;code&gt;_end&lt;/code&gt;から&lt;code&gt;_start&lt;/code&gt;を引くことで、カーネル自体のサイズを求める。
&lt;code&gt;map_size&lt;/code&gt;は&lt;code&gt;best_map_size&lt;/code&gt;で求めるが、&lt;code&gt;best_map_size&lt;/code&gt;では、可能な限り&lt;code&gt;PMD_SIZE&lt;/code&gt;(&lt;code&gt;PGDIR_SIZE&lt;/code&gt;)へpromoteする。
不可能な場合は&lt;code&gt;PAGE_SIZE&lt;/code&gt;にする。
今回のパターンでは&lt;code&gt;PGDIR_SIZE&lt;/code&gt;へpromoteしており、4MBページングを行う。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;では、カーネルをリンクアドレスからロードアドレスへマッピングする。
また、fixmap領域にDTBをマッピングする。&lt;/p&gt;
&lt;p&gt;以下に&lt;code&gt;setup_vm&lt;/code&gt;で作成する&lt;code&gt;early_pg_dir&lt;/code&gt;を図示する。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
以下に&lt;code&gt;setup_vm&lt;/code&gt;で作成する&lt;code&gt;trampoline_pg_dir&lt;/code&gt;を図示する。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image01.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image01.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
最後に、dtbの仮想アドレスと物理アドレスを保存する。
仮想アドレスは、物理アドレスを用いて物理インデックスを計算している。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;cm&#34;&gt;/* Save pointer to DTB for early FDT parsing */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtb_early_va&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_MASK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Save physical address for memblock reservation */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;dtb_early_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;heads続き&#34;&gt;head.S続き&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;
&lt;code&gt;call setup_vm&lt;/code&gt;の次から。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;setup_vm&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;early_pg_dir&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;relocate&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_MMU */
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次はリンクアドレスからロードアドレスへリロケーション(&lt;code&gt;relocate&lt;/code&gt;)する。
第一引数(&lt;code&gt;a0&lt;/code&gt;)に&lt;code&gt;early_pg_dir&lt;/code&gt;をセットし&lt;code&gt;call relocate&lt;/code&gt;を実行する。&lt;/p&gt;
&lt;h3 id=&#34;relocate&#34;&gt;relocate&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;na&#34;&gt;.align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;relocate:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Relocate&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PAGE_OFFSET&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_start&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;sub&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ra&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Point&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;stvec&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;intruction&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;after&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;satp&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;f&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_TVEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Compute&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;satp&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tables&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;yet&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;srl&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PAGE_SHIFT&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SATP_MODE&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trampoline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;directory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;will&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cause&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;us&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trap&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;stvec&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;VA&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;simply&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fall&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;through&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;VA&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PA.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;We&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;full&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fence&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;here&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;because&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;setup_vm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;just&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;wrote&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;these&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTEs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ensure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;translations&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;use.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trampoline_pg_dir&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;srl&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PAGE_SHIFT&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;sfence.vma&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SATP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.align&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;1:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Set&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trap&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vector&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;spin&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;forever&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;debug&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;.Lsecondary_park&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_TVEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Reload&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;push&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;norelax&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;gp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__global_pointer$&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pop&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Switch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tables.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;full&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fence&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;necessary&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;avoid&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;trampoline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;translations&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;which&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;only&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;correct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;superpage.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;Fetching&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fence&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;guarnteed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;work&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;because&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;superpage&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;translated&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;same&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;way.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_SATP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;sfence.vma&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;ret&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_MMU */
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nl&#34;&gt;.Lsecondary_park:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;We&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;lack&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SMP&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;support&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;have&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;too&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;many&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;harts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;so&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;park&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hart&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;wfi&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;.Lsecondary_park&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まず、リターンアドレスをロードアドレスへリロケーションし、&lt;code&gt;ra&lt;/code&gt;レジスタへセットする。
次に、&lt;code&gt;1:&lt;/code&gt;をロードアドレスへリロケーションし、Direct-Modeとして、&lt;code&gt;stvec&lt;/code&gt;にセットする。
次に、&lt;code&gt;a0&lt;/code&gt;レジスタより受け取った&lt;code&gt;early_pg_dir&lt;/code&gt;を&lt;code&gt;PAGE_SHIFT&lt;/code&gt;回右に論理シフトし、&lt;code&gt;satp&lt;/code&gt;の&lt;code&gt;PPN&lt;/code&gt;を生成し、&lt;code&gt;a2&lt;/code&gt;レジスタへセットする。
&lt;code&gt;a2&lt;/code&gt;レジスタのフラグを立て、SV32ページングを有効にする。
次に、&lt;code&gt;trampoline_pg_dir&lt;/code&gt;を用いて、簡単なリロケーションを行う。
仮想アドレス&lt;code&gt;PAGE_OFFSET&lt;/code&gt;(0xc0000000)から4MB分を物理アドレス(load address, 0x80400000)にマッピングする。
TLBをフラッシュし、satpへセットする。
これで、ページングが有効になり、最初の4MBはリロケーションされる。&lt;/p&gt;
&lt;p&gt;再度、&lt;code&gt;stvec&lt;/code&gt;を設定し、&lt;code&gt;global pointer&lt;/code&gt;をリロードする。
その後、リロケーション済みの&lt;code&gt;early_pg_dir&lt;/code&gt;を&lt;code&gt;satp&lt;/code&gt;にロードし、TLBをフラッシュする。
これにより、&lt;code&gt;early_pg_dir&lt;/code&gt;によるページングを有効する。
最後に、リロケーション済みのリターンアドレスを用いて呼び出し元へ戻る。&lt;/p&gt;
&lt;p&gt;次は、relocateの後から読んでいく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part3</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part3/</link>
      <pubDate>Wed, 24 Mar 2021 13:41:26 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part3/</guid>
      <description>&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;の実装を読んでいく。&lt;/p&gt;
&lt;h2 id=&#34;setup_vm&#34;&gt;setup_vm&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;asmlinkage&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup_vm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;best_map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;va_pa_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;pfn_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Enforce boot alignment requirements of RV32 and
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * RV64 by only allowing PMD or PGD mappings.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Sanity check alignment and size */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Setup early PGD for fixmap */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;BUG_ON&lt;/code&gt;は、コンディションがtrueの場合、panicするものである。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include/asm-generic/bug.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;use&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;BUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unless&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;there&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;really&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;no&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;way&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; one
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;example&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;might&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;detecting&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;structure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;corruption&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;middle&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;backed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;out&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;system&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;somehow&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;continue&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;operating&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;perhaps&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reduced&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;functionality&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;it&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;probably&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;BUG-worthy.&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;If&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;you&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;re&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tempted&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;BUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;think&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;completely&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;giving&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;up&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;really&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;only&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;solution&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;There&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;usually&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;better&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;where&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;users&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reboot&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ASAP&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;can&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mostly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;shut&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;down&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cleanly.&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifndef HAVE_ARCH_BUG
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define BUG() do { \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;printk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;BUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;failure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()!&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__LINE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__func__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;barrier_before_unreachable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;panic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;BUG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifndef HAVE_ARCH_BUG_ON
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define BUG_ON(condition) do { if (unlikely(condition)) BUG(); } while (0)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、&lt;code&gt;unlikely&lt;/code&gt;、&lt;code&gt;likely&lt;/code&gt;は条件分岐において、ヒントとしてコンパイラへ与え、通常時の処理を最適化を行う。
&lt;code&gt;include/linux/compiler.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;# define likely(x)	__builtin_expect(!!(x), 1)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# define unlikely(x)	__builtin_expect(!!(x), 0)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;で最初に行う処理は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;である。
&lt;code&gt;PGD&lt;/code&gt;において、マッピングの作成を行う関数のよう。
引数をよく見てみる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/linux/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static void __init create_pgd_mapping(pgd_t *pgdp,
				      uintptr_t va, phys_addr_t pa,
				      phys_addr_t sz, pgprot_t prot)
{
	pgd_next_t *nextp;
	phys_addr_t next_phys;
	uintptr_t pgd_idx = pgd_index(va);

	if (sz == PGDIR_SIZE) {
		if (pgd_val(pgdp[pgd_idx]) == 0)
			pgdp[pgd_idx] = pfn_pgd(PFN_DOWN(pa), prot);
		return;
	}

	if (pgd_val(pgdp[pgd_idx]) == 0) {
		next_phys = alloc_pgd_next(va);
		pgdp[pgd_idx] = pfn_pgd(PFN_DOWN(next_phys), PAGE_TABLE);
		nextp = get_pgd_next_virt(next_phys);
		memset(nextp, 0, PAGE_SIZE);
	} else {
		next_phys = PFN_PHYS(_pgd_pfn(pgdp[pgd_idx]));
		nextp = get_pgd_next_virt(next_phys);
	}

	create_pgd_next_mapping(nextp, va, pa, sz, prot);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;pgdp&lt;/code&gt;はPGDへのポインタである。
&lt;code&gt;va&lt;/code&gt;は仮想アドレスで、&lt;code&gt;pa&lt;/code&gt;にページをマッピングする。
&lt;code&gt;sz&lt;/code&gt;はマッピングのサイズであり、&lt;code&gt;prot&lt;/code&gt;はPTEのプロテクションビットである。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uintptr_t pgd_idx = pgd_index(va);&lt;/code&gt;で、アドレスに対するPGDのindexを求めている。&lt;/p&gt;
&lt;p&gt;次に、&lt;code&gt;PGDIR_SIZE&lt;/code&gt;が作成するマップサイズか確かめている。&lt;code&gt;PGDIR_SIZE&lt;/code&gt;はSV32の場合、4MBになる。
つまり、4MBのマッピングを作る場合は、一つのPGDエントリーで十分である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn_pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先程求めたindexを使い、PGDにエントリーすでに存在しない場合は、&lt;code&gt;pfn_pgd&lt;/code&gt;にてエントリーを作成する。
&lt;code&gt;PFN_DOWN&lt;/code&gt;はアドレスから&lt;code&gt;PFN&lt;/code&gt;を求める。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pfn_pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pfn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgprot_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;include/linux/pfn.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define PFN_UP(x)	(((x) + PAGE_SIZE-1) &amp;gt;&amp;gt; PAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define PFN_DOWN(x)	((x) &amp;gt;&amp;gt; PAGE_SHIFT)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;PGDIR_SIZE&lt;/code&gt;でないマッピングを&lt;code&gt;PGD&lt;/code&gt;に作る場合を考える。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c setup_vm続き&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alloc_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn_pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_pgd_next_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PFN_PHYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_pgd_pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]));&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_pgd_next_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;create_pgd_next_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;エントリーがPGDに存在するか確かめる。まずは、存在しない(true)の場合を見ていく。
&lt;code&gt;alloc_pgd_next&lt;/code&gt;はPGDの次のレベルのテーブルを作る。SV32の場合はPUD、PMDはFOLDEDされているため、次のレベルはページテーブルである。
つまり、実体は&lt;code&gt;alloc_pte&lt;/code&gt;となる。
&lt;code&gt;pgdp&lt;/code&gt;に作成したページテーブルを挿入する。
なお、PAGE_TABLEというprotは、PRESET(V bit)のみが立っている状態で、non-leaf PTEを指す。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef __PAGETABLE_PMD_FOLDED
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define pgd_next_t		pte_t
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define alloc_pgd_next(__va)	alloc_pte(__va)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define get_pgd_next_virt(__pa)	get_pte_virt(__pa)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define create_pgd_next_mapping(__nextp, __va, __pa, __sz, __prot)	\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	create_pte_mapping(__nextp, __va, __pa, __sz, __prot)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define fixmap_pgd_next		fixmap_pte
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alloc_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * We only create PMD or PGD early mappings so we
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * should never reach here with MMU disabled.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmu_enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memblock_phys_alloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;memblock&#34;&gt;memblock&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;memblock&lt;/code&gt;はブート時にカーネルが使用するメモリ管理の手法である。
&lt;code&gt;memblock&lt;/code&gt;にはAPIが用意されており、このAPIを通して、メモリの追加、取得等を行う。
まずは、構造体を見てみる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include/linux/memblock.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * struct memblock - memblock allocator metadata
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @bottom_up: is bottom up direction?
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @current_limit: physical address of the current allocation limit
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @memory: usable memory regions
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @reserved: reserved memory regions
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bottom_up&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;cm&#34;&gt;/* is bottom up direction? */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * struct memblock_type - collection of memory regions of certain type
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @cnt: number of regions
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @max: size of the allocated array
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @total_size: size of all regions
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @regions: array of regions
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @name: the memory type symbolic name
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_region&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * struct memblock_region - represents a memory region
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @base: base address of the region
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @size: size of the region
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @flags: memory region attributes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @nid: NUMA node id
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_region&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;base&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_flags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifdef CONFIG_NEED_MULTIPLE_NODES
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * enum memblock_flags - definition of memory region attributes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @MEMBLOCK_NONE: no special request
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @MEMBLOCK_HOTPLUG: hotpluggable region
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @MEMBLOCK_MIRROR: mirrored region
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @MEMBLOCK_NOMAP: don&amp;#39;t add to kernel direct mapping
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_flags&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;MEMBLOCK_NONE&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* No special request */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;MEMBLOCK_HOTPLUG&lt;/span&gt;	&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* hotpluggable region */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;MEMBLOCK_MIRROR&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* mirrored region */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;MEMBLOCK_NOMAP&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0x4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* don&amp;#39;t add to kernel direct mapping */&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;struct-memblockについて&#34;&gt;&lt;code&gt;struct memblock&lt;/code&gt;について。&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;memblock.bottom_up&lt;/code&gt;はbottom upでメモリ確保をするかを示すフラグである。
&lt;code&gt;memblock.current_limit&lt;/code&gt;は物理メモリの上限サイズである。
&lt;code&gt;memblock.memory&lt;/code&gt;は使用可能メモリの領域で、&lt;code&gt;memblock.reserved&lt;/code&gt;は予約領域である。&lt;/p&gt;
&lt;h3 id=&#34;struct-memblock_typeについて&#34;&gt;&lt;code&gt;struct memblock_type&lt;/code&gt;について。&lt;/h3&gt;
&lt;p&gt;順番は違うが、まず、&lt;code&gt;memblock_type.regions&lt;/code&gt;はメモリの領域(&lt;code&gt;struct memblock_region&lt;/code&gt;の配列)である。
&lt;code&gt;memblock_type.cnt&lt;/code&gt;は&lt;code&gt;memblock_type.regions&lt;/code&gt;の数で、
&lt;code&gt;max&lt;/code&gt;は&lt;code&gt;memblock_regions&lt;/code&gt;のトータルサイズ、
&lt;code&gt;memblock_type.total_size&lt;/code&gt;は、確保したモリ領域のトータルサイズである。
&lt;code&gt;memblock_type.name&lt;/code&gt;はメモリブロックの名前である。&lt;/p&gt;
&lt;h3 id=&#34;memblock_regionである&#34;&gt;&lt;code&gt;memblock_region&lt;/code&gt;である。&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;memblock_region&lt;/code&gt;はメモリ領域を表す構造体であり、&lt;code&gt;memblock_region.base&lt;/code&gt;は領域のベースアドレス、&lt;code&gt;memblock_region.size&lt;/code&gt;は領域のサイズ、&lt;code&gt;memblock_region.flags&lt;/code&gt;は領域に対するフラグである。
フラグは&lt;code&gt;enum memblock_flags&lt;/code&gt;で表される。&lt;/p&gt;
&lt;h3 id=&#34;memblockの初期化&#34;&gt;memblockの初期化&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mm/memblock.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__initdata_memblock&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regions&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_memory_init_regions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* empty dummy entry */&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INIT_MEMBLOCK_REGIONS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memory&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;memory&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;

	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regions&lt;/span&gt;	&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_reserved_init_regions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;cm&#34;&gt;/* empty dummy entry */&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;INIT_MEMBLOCK_RESERVED_REGIONS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;reserved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reserved&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;

	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bottom_up&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_limit&lt;/span&gt;		&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MEMBLOCK_ALLOC_ANYWHERE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define INIT_MEMBLOCK_REGIONS			128
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define INIT_PHYSMEM_REGIONS			4
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef INIT_MEMBLOCK_RESERVED_REGIONS
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;# define INIT_MEMBLOCK_RESERVED_REGIONS		INIT_MEMBLOCK_REGIONS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;include/linux/memblock.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define MEMBLOCK_ALLOC_ANYWHERE	(~(phys_addr_t)0)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、&lt;code&gt;memblock.current_limit&lt;/code&gt;は&lt;code&gt;0xffffffff&lt;/code&gt;である。&lt;/p&gt;
&lt;h3 id=&#34;alloc_pte&#34;&gt;alloc_pte&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;alloc_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * We only create PMD or PGD early mappings so we
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * should never reach here with MMU disabled.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmu_enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_phys_alloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;memblock_phys_alloc&lt;/code&gt;は&lt;code&gt;memblock.memory.regions&lt;/code&gt;より、&lt;code&gt;PAGE_SIZE&lt;/code&gt;境界配置された、&lt;code&gt;PAGE_SIZE&lt;/code&gt;分の領域を確保する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include/linux/memblock.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memblock_phys_alloc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					      &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_phys_alloc_range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					 &lt;span class=&#34;n&#34;&gt;MEMBLOCK_ALLOC_ACCESSIBLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;start:0x00000000&lt;/code&gt;、&lt;code&gt;end:MEMBLOCK_ALLOC_ACCESSIBLE(0x0)&lt;/code&gt;、&lt;code&gt;size:PAGE_SIZE&lt;/code&gt;、&lt;code&gt;align:PAGE_SIZE&lt;/code&gt;を確保する。
&lt;code&gt;end&lt;/code&gt;が&lt;code&gt;MEMBLOCK_ALLOC_ACCESSIBLE&lt;/code&gt;の場合は、&lt;code&gt;memblock_phys_alloc_range&lt;/code&gt;では、&lt;code&gt;start&lt;/code&gt;~&lt;code&gt;memblock.current_limit&lt;/code&gt;の領域からメモリ領域を割り当てが制限される。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mm/memblock.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * memblock_phys_alloc_range - allocate a memory block inside specified range
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @size: size of memory block to be allocated in bytes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @align: alignment of the region and block&amp;#39;s size
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @start: the lower bound of the memory region to allocate (physical address)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @end: the upper bound of the memory region to allocate (physical address)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Allocate @size bytes in the between @start and @end.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Return: physical address of the allocated memory block on success,
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * %0 on failure.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memblock_phys_alloc_range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					     &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					     &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					     &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_alloc_range_nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NUMA_NO_NODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mm/memblock.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * memblock_alloc_range_nid - allocate boot memory block
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @size: size of memory block to be allocated in bytes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @align: alignment of the region and block&amp;#39;s size
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @start: the lower bound of the memory region to allocate (phys address)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @end: the upper bound of the memory region to allocate (phys address)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @nid: nid of the free area to find, %NUMA_NO_NODE for any node
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @exact_nid: control the allocation fall back to other nodes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * The allocation is performed from memory region limited by
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * memblock.current_limit if @end == %MEMBLOCK_ALLOC_ACCESSIBLE.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * If the specified node can not hold the requested memory and @exact_nid
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * is false, the allocation falls back to any node in the system.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * For systems with memory mirroring, the allocation is attempted first
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * from the regions with mirroring enabled and then retried from any
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * memory region.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * In addition, function sets the min_count to 0 using kmemleak_alloc_phys for
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * allocated boot memory block, so that it is never reported as leaks.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Return:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Physical address of allocated memory block on success, %0 on failure.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;memblock_alloc_range_nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exact_nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_flags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;choose_memblock_flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;found&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WARN_ONCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_NUMNODES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Usage of MAX_NUMNODES is deprecated. Use NUMA_NO_NODE instead&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NUMA_NO_NODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* Can&amp;#39;t use WARNs this early in boot on powerpc */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;dump_stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;align&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SMP_CACHE_BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_find_in_range_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					    &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memblock_reserve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NUMA_NO_NODE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exact_nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_find_in_range_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
						    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NUMA_NO_NODE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
						    &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memblock_reserve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MEMBLOCK_MIRROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MEMBLOCK_MIRROR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;pr_warn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Could not allocate %pap bytes of mirrored memory&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;again&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/* Skip kmemleak for kasan_init() due to high volume. */&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MEMBLOCK_ALLOC_KASAN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * The min_count is set to 0 so that memblock allocated
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * blocks are never reported as leaks. This is because many
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * of these blocks are only referred via the physical
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * address which is not looked up by kmemleak.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;kmemleak_alloc_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;found&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;found&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * memblock_find_in_range_node - find free area in given range and node
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @size: size of free area to find
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @align: alignment of free area to find
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @start: start of candidate range
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @end: end of candidate range, can be %MEMBLOCK_ALLOC_ANYWHERE or
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *       %MEMBLOCK_ALLOC_ACCESSIBLE
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @nid: nid of the free area to find, %NUMA_NO_NODE for any node
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @flags: pick from blocks based on memory attributes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Find @size free area aligned to @align in the specified range and node.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * When allocation direction is bottom-up, the @start should be greater
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * than the end of the kernel image. Otherwise, it will be trimmed. The
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * reason is that we want the bottom-up allocation just near the kernel
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * image so it is highly likely that the allocated memory and the kernel
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * will reside in the same node.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * If bottom-up allocation failed, will try to allocate memory top-down.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Return:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Found address on success, 0 on failure.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init_memblock&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_find_in_range_node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_flags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kernel_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* pump up @end */&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MEMBLOCK_ALLOC_ACCESSIBLE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MEMBLOCK_ALLOC_KASAN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current_limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* avoid allocating the first page */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;kernel_end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__pa_symbol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * try bottom-up allocation only when bottom-up mode
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * is set and @end is above the kernel image.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;memblock_bottom_up&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kernel_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bottom_up_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* make sure we will allocate above the kernel */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;bottom_up_start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;kernel_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* ok, try bottom-up allocation first */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__memblock_find_range_bottom_up&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bottom_up_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
						      &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * we always limit bottom-up allocation above the kernel,
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * but top-down allocation doesn&amp;#39;t have the limit, so
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * retrying top-down allocation may succeed when bottom-up
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * allocation failed.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * bottom-up allocation is expected to be fail very rarely,
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * so we use WARN_ONCE() here to see the stack trace if
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 * fail happens.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		 */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;WARN_ONCE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;IS_ENABLED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CONFIG_MEMORY_HOTREMOVE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
			  &lt;span class=&#34;s&#34;&gt;&amp;#34;memblock: bottom-up allocation failed, memory hotremove may be affected&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__memblock_find_range_top_down&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					      &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * __memblock_find_range_top_down - find free area utility, in top-down
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @start: start of candidate range
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @end: end of candidate range, can be %MEMBLOCK_ALLOC_ANYWHERE or
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *       %MEMBLOCK_ALLOC_ACCESSIBLE
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @size: size of free area to find
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @align: alignment of free area to find
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @nid: nid of the free area to find, %NUMA_NO_NODE for any node
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * @flags: pick from blocks based on memory attributes
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Utility called from memblock_find_in_range_node(), find free area top-down.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Return:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Found address on success, 0 on failure.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init_memblock&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;__memblock_find_range_top_down&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			       &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			       &lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;memblock_flags&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;for_each_free_mem_range_reverse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;this_start&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;clamp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

		&lt;span class=&#34;n&#34;&gt;cand&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;round_down&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;this_end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cand&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;this_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、&lt;code&gt;alloc_pte&lt;/code&gt;にて、&lt;code&gt;PAGE_SIZE&lt;/code&gt;に境界配置された&lt;code&gt;PAGE_SIZE&lt;/code&gt;サイズの領域を&lt;code&gt;memblock&lt;/code&gt;より確保する。&lt;/p&gt;
&lt;h2 id=&#34;setup_vmの続き&#34;&gt;setup_vmの続き&lt;/h2&gt;
&lt;h3 id=&#34;create_pgd_mapping&#34;&gt;create_pgd_mapping&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	if (pgd_val(pgdp[pgd_idx]) == 0) {
		next_phys = alloc_pgd_next(va);
		pgdp[pgd_idx] = pfn_pgd(PFN_DOWN(next_phys), PAGE_TABLE);
		nextp = get_pgd_next_virt(next_phys);
		memset(nextp, 0, PAGE_SIZE);
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;pfn_pgd&lt;/code&gt;で、&lt;code&gt;next_phys&lt;/code&gt;(PAGE_TABLE)に対する&lt;code&gt;PTE&lt;/code&gt;を作り、&lt;code&gt;pgdp[pgd_idx]&lt;/code&gt;に挿入する。
&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef __PAGETABLE_PMD_FOLDED
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define pgd_next_t		pte_t
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define alloc_pgd_next(__va)	alloc_pte(__va)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define get_pgd_next_virt(__pa)	get_pte_virt(__pa)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define create_pgd_next_mapping(__nextp, __va, __pa, __sz, __prot)	\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	create_pte_mapping(__nextp, __va, __pa, __sz, __prot)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define fixmap_pgd_next		fixmap_pte
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;get_pgd_next_virt&lt;/code&gt;は&lt;code&gt;get_pte_virt&lt;/code&gt;である。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_pte_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmu_enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;clear_fixmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_fixmap_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;fixmap&#34;&gt;fixmap&lt;/h3&gt;
&lt;p&gt;fixmapはコンパイルタイムで確定する仮想アドレスである。
それぞれのアドレスは1つのページフレームに対応する。
カーネルはブート時にこれらをポインターとしてこの変わらないアドレスを使用する。
fixmapの定義は&lt;code&gt;arch/riscv/include/asm/fixmap.h&lt;/code&gt;に存在する。
&lt;code&gt;arch/riscv/include/asm/fixmap.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Here we define all the compile-time &amp;#39;special&amp;#39; virtual addresses.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * The point is to have a constant address at compile time, but to
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * set the physical address only in the boot process.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * These &amp;#39;compile-time allocated&amp;#39; memory buffers are page-sized. Use
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * set_fixmap(idx,phys) to associate physical memory with fixmap indices.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fixed_addresses&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_HOLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define FIX_FDT_SIZE	SZ_1M
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;FIX_FDT_END&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_FDT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIX_FDT_END&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIX_FDT_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_PMD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_TEXT_POKE1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_TEXT_POKE0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;FIX_EARLYCON_MEM_BASE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;__end_of_fixed_addresses&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define VMALLOC_SIZE     (KERN_VIRT_SIZE &amp;gt;&amp;gt; 1)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define VMALLOC_END      (PAGE_OFFSET - 1)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define VMALLOC_START    (PAGE_OFFSET - VMALLOC_SIZE)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define BPF_JIT_REGION_SIZE	(SZ_128M)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define BPF_JIT_REGION_START	(PAGE_OFFSET - BPF_JIT_REGION_SIZE)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define BPF_JIT_REGION_END	(VMALLOC_END)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Roughly size the vmemmap space to be large enough to fit enough
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * struct pages to map half the virtual address space. Then
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * position vmemmap directly below the VMALLOC region.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define VMEMMAP_SHIFT \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	(CONFIG_VA_BITS - PAGE_SHIFT - 1 + STRUCT_PAGE_MAX_SHIFT)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define VMEMMAP_SIZE	BIT(VMEMMAP_SHIFT)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define VMEMMAP_END	(VMALLOC_START - 1)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define VMEMMAP_START	(VMALLOC_START - VMEMMAP_SIZE)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Define vmemmap for pfn_to_page &amp;amp; page_to_pfn calls. Needed if kernel
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * is configured with CONFIG_SPARSEMEM_VMEMMAP enabled.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define vmemmap		((struct page *)VMEMMAP_START)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define PCI_IO_SIZE      SZ_16M
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define PCI_IO_END       VMEMMAP_START
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define PCI_IO_START     (PCI_IO_END - PCI_IO_SIZE)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define FIXADDR_TOP      PCI_IO_START
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifdef CONFIG_64BIT
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXADDR_SIZE     PMD_SIZE
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXADDR_SIZE     PGDIR_SIZE
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXADDR_START    (FIXADDR_TOP - FIXADDR_SIZE)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、FIXMAP領域(&lt;code&gt;FIXADDR_TOP&lt;/code&gt;)は&lt;code&gt;PCI_IO_START&lt;/code&gt;(&lt;code&gt;0x9e000000&lt;/code&gt;)より始まる。
以下にメモリマップを示す。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
fixmapはindexを用いて、indexに対応するfixmap内のページを割り当てる。
次にindexから仮想アドレスへ割り当てる方法を見ていく。&lt;/p&gt;
&lt;h4 id=&#34;__set_fixmap&#34;&gt;__set_fixmap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;__set_fixmap&lt;/code&gt;では、&lt;code&gt;enum fixed_addresses&lt;/code&gt;に対応するindexを物理アドレスへの変換をページテーブルに挿入する。
&lt;code&gt;fixmap_pte&lt;/code&gt;はfixmap用のページテーブルであり、fixmap領域4096KBをカバーする。
&lt;code&gt;__fix_to_virt&lt;/code&gt;にて、indexから仮想アドレスを計算する。
次に、仮想アドレスと物理アドレスの変換するPTEを用意し、&lt;code&gt;fixmap_pte&lt;/code&gt;テーブルを上書きする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;swapper_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRS_PER_PGD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__page_aligned_bss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trampoline_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRS_PER_PGD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__page_aligned_bss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fixmap_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRS_PER_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__page_aligned_bss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mmu_enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;cp&#34;&gt;#define MAX_EARLY_MAPPING_SIZE	SZ_128M
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRS_PER_PGD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__initdata&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__aligned&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;__set_fixmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fixed_addresses&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIX_HOLE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__end_of_fixed_addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)];&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgprot_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;set_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;pte_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;init_mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;local_flush_tlb_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;__fix_to_virtおよび__virt_to_fix&#34;&gt;__fix_to_virtおよび__virt_to_fix&lt;/h4&gt;
&lt;p&gt;これらのマクロで、fixmapのindexから仮想アドレスへの相互変換を行う。
&lt;code&gt;include/asm-generic/fixmap.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define __fix_to_virt(x)	(FIXADDR_TOP - ((x) &amp;lt;&amp;lt; PAGE_SHIFT))
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define __virt_to_fix(x)	((FIXADDR_TOP - ((x)&amp;amp;PAGE_MASK)) &amp;gt;&amp;gt; PAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifndef __ASSEMBLY__
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * &amp;#39;index to address&amp;#39; translation. If anyone tries to use the idx
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * directly without translation, we catch the bug with a NULL-deference
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * kernel oops. Illegal ranges of incoming indices are caught too.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__always_inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUILD_BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__end_of_fixed_addresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__fix_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;virt_to_fix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_TOP&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__virt_to_fix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vaddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;__fix_to_virt&lt;/code&gt;では、&lt;code&gt;FIXADDR_TOP&lt;/code&gt;から&lt;code&gt;index&amp;lt;&amp;lt;PAGE_SHIFT&lt;/code&gt;を引くことで求める。
つまり、indexに対応する仮想アドレスのベースアドレスを返す。
逆に、&lt;code&gt;__virt_to_fix&lt;/code&gt;では、仮想アドレスより、対応するindexを求める。
つまり、ページフレーム番号を求める。&lt;/p&gt;
&lt;h4 id=&#34;clear_fixmapとset_fixmap&#34;&gt;clear_fixmapとset_fixmap&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;include/asm-generic/fixmap.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Provide some reasonable defaults for page flags.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * Not all architectures use all of these different types and some
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; * architectures use different names.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt; */&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifndef FIXMAP_PAGE_NORMAL
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXMAP_PAGE_NORMAL PAGE_KERNEL
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#if !defined(FIXMAP_PAGE_RO) &amp;amp;&amp;amp; defined(PAGE_KERNEL_RO)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXMAP_PAGE_RO PAGE_KERNEL_RO
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef FIXMAP_PAGE_NOCACHE
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXMAP_PAGE_NOCACHE PAGE_KERNEL_NOCACHE
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef FIXMAP_PAGE_IO
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXMAP_PAGE_IO PAGE_KERNEL_IO
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef FIXMAP_PAGE_CLEAR
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define FIXMAP_PAGE_CLEAR __pgprot(0)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifndef set_fixmap
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define set_fixmap(idx, phys)				\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	__set_fixmap(idx, phys, FIXMAP_PAGE_NORMAL)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifndef clear_fixmap
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define clear_fixmap(idx)			\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	__set_fixmap(idx, 0, FIXMAP_PAGE_CLEAR)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define _PAGE_KERNEL		(_PAGE_READ \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;				| _PAGE_WRITE \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;				| _PAGE_PRESENT \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;				| _PAGE_ACCESSED \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;				| _PAGE_DIRTY)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define PAGE_KERNEL		__pgprot(_PAGE_KERNEL)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define PAGE_KERNEL_EXEC	__pgprot(_PAGE_KERNEL | _PAGE_EXEC)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;setup_fixmap&lt;/code&gt;と&lt;code&gt;clear_fixmap&lt;/code&gt;は&lt;code&gt;__set_fixmap&lt;/code&gt;のラッパーである。
PTEのprotを適切にセットする。&lt;/p&gt;
&lt;h4 id=&#34;set_fixmap_offset&#34;&gt;set_fixmap_offset&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;include/asm-generic/fixmap.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/* Return a pointer with offset calculated */&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define __set_fixmap_offset(idx, phys, flags)				\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;({									\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	unsigned long ________addr;					\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	__set_fixmap(idx, phys, flags);					\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	________addr = fix_to_virt(idx) + ((phys) &amp;amp; (PAGE_SIZE - 1));	\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	________addr;							\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;})
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define set_fixmap_offset(idx, phys) \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	__set_fixmap_offset(idx, phys, FIXMAP_PAGE_NORMAL)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;set_fixmap_offset&lt;/code&gt;は&lt;code&gt;__set_fixmap&lt;/code&gt;によりfixmapのセットを行い、
&lt;code&gt;fix_to_virt&lt;/code&gt;によりindexから対応する仮想アドレスのベースアドレスを求め、それにオフセット(物理アドレス)を足しそれを返す。&lt;/p&gt;
&lt;h3 id=&#34;get_pte_virt&#34;&gt;get_pte_virt&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_pte_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mmu_enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;clear_fixmap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_fixmap_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FIX_PTE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;get_pte_virt&lt;/code&gt;はfixmap領域の&lt;code&gt;FIX_PTE&lt;/code&gt;を物理アドレス(&lt;code&gt;pa&lt;/code&gt;)に割り当てる。&lt;/p&gt;
&lt;h2 id=&#34;setup_vm続き&#34;&gt;setup_vm続き&lt;/h2&gt;
&lt;h3 id=&#34;create_pgd_mapping-1&#34;&gt;create_pgd_mapping&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alloc_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn_pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_pgd_next_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;memset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PFN_PHYS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_pgd_pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pgd_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]));&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;get_pgd_next_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_phys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;create_pgd_next_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nextp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;memset&lt;/code&gt;にて、pteを0で初期化する。
次に、&lt;code&gt;pgdp&lt;/code&gt;にエントリーが存在しない場合を見ていく。
&lt;code&gt;PFN_PHYS&lt;/code&gt;はPFNから物理アドレスを計算する。
&lt;code&gt;get_pgd_next_virt&lt;/code&gt;にて、&lt;code&gt;FIX_PTE&lt;/code&gt;を&lt;code&gt;next_phys&lt;/code&gt;に変換するようにする。
つまり、&lt;code&gt;create_pgd_mapping&lt;/code&gt;はszが4MBページングの範囲ならPGDのエントリーを作成する。
szが4KBの範囲ならPGDのエントリーをページテーブルを指すようにする。ページテーブルのエントリーが実際の変換を行うようにする(&lt;code&gt;create_pgd_next_mapping&lt;/code&gt;)。&lt;/p&gt;
&lt;h3 id=&#34;create_pgd_next_mapping&#34;&gt;create_pgd_next_mapping&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define create_pgd_next_mapping(__nextp, __va, __pa, __sz, __prot)	\
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	create_pte_mapping(__nextp, __va, __pa, __sz, __prot)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;create_pte_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				      &lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				      &lt;span class=&#34;n&#34;&gt;phys_addr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pte_idx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pte_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]))&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_idx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pfn_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;include/linux/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pte_index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PTRS_PER_PTE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pte_index&lt;/code&gt;はアドレスに対応するページテーブル配列のindexを求める。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pte_none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pte_none&lt;/code&gt;はPTEがNULLであることを確かめる。
次に、ページテーブルにエントリーを挿入する。&lt;/p&gt;
&lt;p&gt;とりあえず、ここまで。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part2</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part2/</link>
      <pubDate>Tue, 23 Mar 2021 13:48:04 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part2/</guid>
      <description>&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;を読んでいく。&lt;/p&gt;
&lt;h2 id=&#34;setup_vm&#34;&gt;setup_vm&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setup_vm&lt;/code&gt;の段階では、load addressからlink addressへのリロケーションが終わっていないので&lt;code&gt;PC-relative&lt;/code&gt;なコード生成が必須である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;n&#34;&gt;asmlinkage&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__init&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;setup_vm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtb_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end_va&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;best_map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;va_pa_offset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;pfn_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PFN_DOWN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Enforce boot alignment requirements of RV32 and
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * RV64 by only allowing PMD or PGD mappings.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Sanity check alignment and size */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PAGE_OFFSET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_pa&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;map_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;BUG_ON&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load_sz&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX_EARLY_MAPPING_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Setup early PGD for fixmap */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;create_pgd_mapping&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;early_pg_dir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FIXADDR_START&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			   &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uintptr_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fixmap_pgd_next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PGDIR_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PAGE_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pgtableh&#34;&gt;pgtable.h&lt;/h3&gt;
&lt;p&gt;わからないので、まずはヘッダーファイルから読んでいく。
ページング関連で主要なのヘッダーファイルは&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;っぽい。
&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_64BIT
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/pgtable-64.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/pgtable-32.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_64BIT */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pgtable-32h&#34;&gt;pgtable-32.h&lt;/h3&gt;
&lt;p&gt;RV32の場合は&lt;code&gt;arch/riscv/include/asm/pgtable-32.h&lt;/code&gt;も関連してくる。
まずは、こちらから読んでいく。
&lt;code&gt;arch/riscv/include/asm/pgtable-32.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm-generic/pgtable-nopmd.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;linux/const.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Size&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mapped&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;directory&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define PGDIR_SHIFT     22
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PGDIR_SIZE      (_AC(1, UL) &amp;lt;&amp;lt; PGDIR_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PGDIR_MASK      (~(PGDIR_SIZE - 1))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;PGDIR_SIZE&lt;/code&gt;は&lt;code&gt;0x400000&lt;/code&gt;となる。
&lt;code&gt;PGDIR_MASK&lt;/code&gt;は&lt;code&gt;0xffc00000&lt;/code&gt;となる。&lt;/p&gt;
&lt;h3 id=&#34;linux-5-level-paging&#34;&gt;Linux 5-Level Paging&lt;/h3&gt;
&lt;p&gt;Linuxでは、仮想アドレスを5つに分けて物理アドレスにマッピングする。
一部のx86_64プロセッサではサポートしているようである。
5-Level Pagingのイメージ図を示す。
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
それぞれ、Page Global Directory(PGD)、Page 4-Level Directory(P4D)、Page Upper Directory(PUD)、PMD(Page Middle Directory)、PTE(Page Table Entry)である。
また、Physical PageはPage Frame Number(PFN)で一意に求めることができる。
&lt;code&gt;PAGE_OFFSET&lt;/code&gt;が0x1000の場合、
例えば、0x00000000番地ではPFNは0(page 0)となり、0x00001000番地はPFNは1(page 1)となる。&lt;/p&gt;
&lt;h3 id=&#34;risc-vページング&#34;&gt;RISC-Vページング&lt;/h3&gt;
&lt;p&gt;RISC-VにおけるLinuxのページングのイメージ図を示す。
PUDはRISC-Vでは、使用しない。
&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#ifndef __ASSEMBLY__
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Upper&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Directory&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;used&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISC-V&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm-generic/pgtable-nopud.h&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;また、P4DについてRISC-Vでは使用しない。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include/asm-generic/pgtable-nopud.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#ifndef __ASSEMBLY__
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm-generic/pgtable-nop4d.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define __PAGETABLE_PUD_FOLDED 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;include/asm-generic/pgtable-nop4d.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define __PAGETABLE_P4D_FOLDED 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image01.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image01.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
なお、SV32ページングでは、最大2段ページングが可能である。
よって、SV32では、PGD -&amp;gt; Page Tableの順で索引する。
なお、PGD内にLeaf PTE(V&amp;amp;&amp;amp;((R|W|X)&amp;amp;&amp;amp;!(!R|W)))がある場合は、4Mページングとなる。
RISC-Vでは、&lt;code&gt;satp&lt;/code&gt;レジスタがPGDの物理アドレス22ビットを保持する(ページウォーク時には左に2回シフト)。
4Mページングの場合はPGDを一回索引するだけである。(offsetは22bitとなる)
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image02.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image02.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;sv32ページング&#34;&gt;SV32ページング&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable-32.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Size&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;region&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mapped&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;directory&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define PGDIR_SHIFT     22
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PGDIR_SIZE      (_AC(1, UL) &amp;lt;&amp;lt; PGDIR_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PGDIR_MASK      (~(PGDIR_SIZE - 1))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/page.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_SHIFT	(12)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_SIZE	(_AC(1, UL) &amp;lt;&amp;lt; PAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_MASK	(~(PAGE_SIZE - 1))
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define HPAGE_SHIFT		PMD_SHIFT
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define HPAGE_SIZE		(_AC(1, UL) &amp;lt;&amp;lt; HPAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define HPAGE_MASK              (~(HPAGE_SIZE - 1))
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define HUGETLB_PAGE_ORDER      (HPAGE_SHIFT - PAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Directory&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd_t&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_t&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pgtable_t&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;struct page&lt;/code&gt;は&lt;code&gt;include/linux/mm_types.h&lt;/code&gt;で定義されている、ページ記述子である。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SHIFT&lt;/code&gt;マクロはあるレベルにおいて、マップされる長さを示す。
例えば、Page Tableであれば、&lt;code&gt;PAGE_SHIFT&lt;/code&gt;は12なので、&lt;code&gt;2**12 = 4KB&lt;/code&gt;がマッピングの&lt;code&gt;SIZE&lt;/code&gt;となる。
&lt;code&gt;MASK&lt;/code&gt;マクロは&lt;code&gt;SHIFT&lt;/code&gt;より上位のビットすべてをマスク可能な定数である。例えば、&lt;code&gt;SHIFT&lt;/code&gt;が12の場合、&lt;code&gt;0xfffff000&lt;/code&gt;となる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PAGE_&lt;/code&gt;マクロは、4KBページング用のマクロであり、&lt;code&gt;HPAGE&lt;/code&gt;は4MBページング(Huge Page)である。&lt;/p&gt;
&lt;p&gt;PTEのフラグは&lt;code&gt;pgprot_t&lt;/code&gt;構造体に格納する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pgd_t&lt;/code&gt;、&lt;code&gt;pte_t&lt;/code&gt;、&lt;code&gt;pgprot_t&lt;/code&gt;の値を作るマクロとして、それぞれ&lt;code&gt;pgd_val(val)&lt;/code&gt;、&lt;code&gt;pte_val(val)&lt;/code&gt;、&lt;code&gt;pgprot_val(val)&lt;/code&gt;が用意されている。
また、キャスト用のマクロとして&lt;code&gt;__pgd(var)&lt;/code&gt;、&lt;code&gt;__pte(var)&lt;/code&gt;、&lt;code&gt;__pgprot(var)&lt;/code&gt;が用意されている。&lt;/p&gt;
&lt;p&gt;PTEのフラグ用のマクロは&lt;code&gt;arch/riscv/include/asm/pgtable-bits.h&lt;/code&gt;で定義されている。
&lt;code&gt;arch/riscv/include/asm/pgtable-bits.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_PRESENT   (1 &amp;lt;&amp;lt; 0)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define __PAGE_READ      (1 &amp;lt;&amp;lt; 1)    /* Readable */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define __PAGE_WRITE     (1 &amp;lt;&amp;lt; 2)    /* Writable */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define __PAGE_EXEC      (1 &amp;lt;&amp;lt; 3)    /* Executable */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_USER      (1 &amp;lt;&amp;lt; 4)    /* User */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_GLOBAL    (1 &amp;lt;&amp;lt; 5)    /* Global */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_ACCESSED  (1 &amp;lt;&amp;lt; 6)    /* Set by hardware on any access */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_DIRTY     (1 &amp;lt;&amp;lt; 7)    /* Set by hardware on any write */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define _PAGE_SOFT      (1 &amp;lt;&amp;lt; 8)    /* Reserved for software */
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pgd_offset&lt;/code&gt;は&lt;code&gt;mm_struct&lt;/code&gt;とアドレスを取り、与えられたアドレスをカバーする&lt;code&gt;pgd&lt;/code&gt;を返す。
&lt;code&gt;pte_offset&lt;/code&gt;は&lt;code&gt;pmd&lt;/code&gt;とアドレスを取り、与えられたアドレスをカバーする&lt;code&gt;pte&lt;/code&gt;を返す。
&lt;code&gt;pte_none&lt;/code&gt;、&lt;code&gt;pgd_none&lt;/code&gt;マクロは、与えられたエントリーが存在しない場合は1を返す。
&lt;code&gt;pte_present&lt;/code&gt;、&lt;code&gt;pgd_present&lt;/code&gt;マクロは、与えられたエントリーが存在する場合は1を返す。
&lt;code&gt;pte_clear&lt;/code&gt;、&lt;code&gt;pgd_clear&lt;/code&gt;マクロは、与えられたエントリーをクリアする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/pgtable.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_PRESENT&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PROT_NONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_bad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define pmd_leaf	pmd_leaf
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_leaf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
	       &lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;pmd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_READ&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_EXEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;set_pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;pmdp&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;set_pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmdp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pfn_pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pfn&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_pgd_pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pgd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pgd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pfn_to_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd_page_vaddr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pfn_to_virt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pmd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Yields&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;frame&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PFN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define pte_page(x)     pfn_to_page(pte_pfn(x))
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Constructs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pfn_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pfn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pfn&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PFN_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;prot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define mk_pte(page, prot)       pfn_pte(page_to_pfn(page), prot)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_PRESENT&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_PROT_NONE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_EXEC&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_huge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;err&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_READ&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_EXEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_dirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_DIRTY&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_young&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_ACCESSED&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_special&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_SPECIAL&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_rdprotect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_wrprotect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkread&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkwrite&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkexec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkdirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_DIRTY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; } 
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkclean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_DIRTY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkyoung&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_ACCESSED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_ACCESSED&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkspecial&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_SPECIAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_mkhuge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Modify&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;protection&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bits&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;newprot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_PAGE_CHG_MASK&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgprot_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;newprot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#define pgd_ERROR(e) \
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;pr_err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bad&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTE_FMT&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;\&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__FILE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__LINE__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pgd_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;


&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Commit&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;configuration&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;MMU&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hardware&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;update_mmu_cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vm_area_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;assumes&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TLBs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cache&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;invalid&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISC-V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SFENCE.VMA&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;specifies&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ordering&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;constraint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cache&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flush&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; it is necessary even after writing invalid entries.
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	 &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Relying&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;on&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flush_tlb_fix_spurious_fault&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;would&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;suffice&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;extra&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;traps&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reduce&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;performance.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;So&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eagerly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SFENCE.VMA.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;local_flush_tlb_page&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTE_SAME
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_same&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Certain&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;architectures&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;need&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;special&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;things&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;when&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTEs&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;within&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;table&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;are&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;directly&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;modified.&lt;/span&gt;  &lt;span class=&#34;no&#34;&gt;Thus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;following&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hook&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;made&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;available.&lt;/span&gt;
 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;set_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;ptep&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flush_icache_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;set_pte_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mm_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_present&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;flush_icache_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;set_pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pteval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mm_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;set_pte_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTEP_SET_ACCESS_FLAGS
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_set_access_flags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vm_area_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					&lt;span class=&#34;nf&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;dirty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_same&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;set_pte_at&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma-&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vm_mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;update_mmu_cache&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;will&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;unconditionally&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;execute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;handling&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;both&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PTE&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;changed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;spurious&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;fault&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;case.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTEP_GET_AND_CLEAR
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_get_and_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mm_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				       &lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__pte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;atomic_long_xchg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;atomic_long_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*)&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTEP_TEST_AND_CLEAR_YOUNG
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_test_and_clear_young&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vm_area_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					    &lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					    &lt;span class=&#34;nf&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(!&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_young&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;test_and_clear_bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_ACCESSED_OFFSET&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;pte_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTEP_SET_WRPROTECT
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_set_wrprotect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;mm_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
				      &lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;atomic_long_and&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_PAGE_WRITE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;atomic_long_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*)&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c&#34;&gt;#define __HAVE_ARCH_PTEP_CLEAR_YOUNG_FLUSH
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_clear_flush_young&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;vm_area_struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
					 &lt;span class=&#34;nf&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pte_t&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;This&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;comment&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;borrowed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;x86&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;applies&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;equally&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISC-V&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Clearing&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;accessed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bit&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;without&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TLB&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flush&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;doesn&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cause&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;corruption.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;It&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;could&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;cause&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;incorrect&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;aging&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;mistaken&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;reclaim&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hot&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pages&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;but&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;chance&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;should&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;relatively&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;low.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;So&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;performance&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;optimization&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;don&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flush&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;TLB&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;when&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;clearing&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;accessed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;will&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;eventually&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flushed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;context&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;VM&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;operation&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;anyway.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;In&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;rare&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;getting&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flushed&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;delay&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;shouldn&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;really&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;matter&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;because&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;there&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;no&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;real&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;memory&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pressure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;swapout&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;react&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to.&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep_test_and_clear_young&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;vma&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ptep&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mk_pte&lt;/code&gt;マクロは&lt;code&gt;struct page&lt;/code&gt;とプロテクションビットを取り、&lt;code&gt;pte_t&lt;/code&gt;を返す。
&lt;code&gt;pte_page&lt;/code&gt;はpteに対応するpageを返す。
&lt;code&gt;pmd_page&lt;/code&gt;は&lt;code&gt;pmd&lt;/code&gt;に対応するpageを返す。
&lt;code&gt;set_pte&lt;/code&gt;はpage tableと&lt;code&gt;pte_t&lt;/code&gt;を取り、pteをpage tableに挿入する。&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://people.kernel.org/linusw/arm32-page-tables&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;ARM32 Page Tables&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/gorman/html/understand/understand006.html&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Chapter 3  Page Table Management&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mkguytone.github.io/allocator-navigatable/ch62.html&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;第62章 ページ記述子（ struct page )&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/41090469/linux-kernel-how-to-get-physical-address-memory-management&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;linux kernel - how to get physical address (memory management)?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kernel.org/doc/html/latest/x86/x86_64/5level-paging.html&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;24.4. 5-level paging&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kimullaa.com/entry/2020/02/16/155746&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Linux メモリ管理 徹底入門(カーネル編)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hiboma/hiboma/blob/master/Linux%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E8%A7%A3%E8%AA%AD%E5%AE%A4/Linux%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E8%A7%A3%E8%AA%AD%E5%AE%A4-1.md&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;hiboma/Linuxカーネル解読室/Linuxカーネル解読室-1.md&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ryuichi1208.hateblo.jp/entry/2019/01/29/221155&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;【Linux】mm_struct は何してるか&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.coins.tsukuba.ac.jp/~yas/coins/os2-2010/2011-01-25/&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;メモリ管理、アドレス空間、ページテーブル&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今回はこのくらいにしておく。次回から&lt;code&gt;arch/riscv/mm/init.c&lt;/code&gt;を読んでいく。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading linux kernel part1</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part1/</link>
      <pubDate>Mon, 22 Mar 2021 17:53:40 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_linux_kernel_part1/</guid>
      <description>&lt;p&gt;RISC-V portsのLinux Kernelを読んでいく。
自作のRISC-V SoC向けに移植をすることを目標としている。&lt;/p&gt;
&lt;h2 id=&#34;boot-loaderopensbiによるlinuxのロード実行&#34;&gt;Boot loader(OpenSBI)によるLinuxのロード・実行&lt;/h2&gt;
&lt;p&gt;OpenSBIのFW_PAYLOADとして、Linux kernelをロードし、制御を移すこととする。
また、SoCの情報はDevice Treeとして記述し、FDT(Flatten Device Tree)としてOpenSBIより引き渡す。&lt;/p&gt;
&lt;p&gt;以下に、OpenSBIからLinuxをブートする際のメモリマップの概略図を示す。
&lt;code&gt;0x80400000&lt;/code&gt;にLinux Kernelが配置されている。
OpenSBIは&lt;code&gt;a0&lt;/code&gt;レジスタに&lt;code&gt;mhartid&lt;/code&gt;、&lt;code&gt;a1&lt;/code&gt;レジスタにFDT PAが格納されている。&lt;/p&gt;
&lt;p&gt;以下のトラップはS-modeへdelegationされているので、Linuxによりハンドルされる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supervisor Software Interrput&lt;/li&gt;
&lt;li&gt;Supervisor Timer Interrput&lt;/li&gt;
&lt;li&gt;Supervisor External Interrput&lt;/li&gt;
&lt;li&gt;Environment Call From U Mode&lt;/li&gt;
&lt;li&gt;Instruction Address Misaligned&lt;/li&gt;
&lt;li&gt;Environment breakpoint&lt;/li&gt;
&lt;li&gt;Instruction Page Fault&lt;/li&gt;
&lt;li&gt;Load Page Fault&lt;/li&gt;
&lt;li&gt;Store AMO Page Fault&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それ以外のトラップはOpenSBI(M-mode)によりハンドルされる。
また、early stageでは、SBIコールを用いてコンソール入出力を行う(&lt;code&gt;earlycon=sbi&lt;/code&gt;)。&lt;/p&gt;
&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image00.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image00.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;h2 id=&#34;linux-kernel-entrypoint&#34;&gt;Linux kernel entrypoint&lt;/h2&gt;
&lt;h3 id=&#34;linker-script&#34;&gt;linker script&lt;/h3&gt;
&lt;p&gt;linker scriptは&lt;code&gt;arch/riscv/kernel/vmlinux.lds.S&lt;/code&gt;である。
マクロは&lt;code&gt;include/asm-generic/vmlinux.lds.h&lt;/code&gt;を参照。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define LOAD_OFFSET PAGE_OFFSET
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/vmlinux.lds.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/page.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/cache.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/thread_info.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#include &amp;lt;asm/set_memory.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#include &amp;lt;linux/sizes.h&amp;gt;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;OUTPUT_ARCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;riscv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;jiffies&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;jiffies_64&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;SECTIONS&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Beginning&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;code&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;segment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LOAD_OFFSET&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;_start&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;HEAD_TEXT_SECTION&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;__init_begin&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;INIT_TEXT_SECTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;__soc_early_init_table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;__soc_early_init_table_start&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;KEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(*(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__soc_early_init_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;__soc_early_init_table_end&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;__soc_builtin_dtb_table&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;__soc_builtin_dtb_table_start&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;KEEP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(*(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;__soc_builtin_dtb_table&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;__soc_builtin_dtb_table_end&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;we&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;have&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;discard&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;exit&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;such&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;at&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;runtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.exit.text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;EXIT_TEXT&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.exit.data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;EXIT_DATA&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;PERCPU_SECTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;L1_CACHE_BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;__init_end&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;SECTION_ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;.text&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;_text&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;_stext&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;no&#34;&gt;TEXT_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;SCHED_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;CPUIDLE_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;LOCK_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;KPROBES_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;ENTRY_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;IRQENTRY_TEXT&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;SOFTIRQENTRY_TEXT&lt;/span&gt;
		&lt;span class=&#34;err&#34;&gt;*(&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.fixup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;_etext&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;INIT_DATA_SECTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Start&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;_sdata&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;RO_DATA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;SECTION_ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.srodata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;err&#34;&gt;*(&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.srodata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;EXCEPTION_TABLE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0x10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;SECTION_ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;_data&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;RW_DATA&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;L1_CACHE_BYTES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;THREAD_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.sdata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;__global_pointer$&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0x800&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;*(.&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;sdata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*)&lt;/span&gt;
		&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;End&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;section&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
		&lt;span class=&#34;nf&#34;&gt;_edata&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;BSS_SECTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;PAGE_SIZE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;na&#34;&gt;.rel.dyn&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;err&#34;&gt;*(&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;.rel.dyn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;*)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;_end&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;STABS_DEBUG&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;DWARF_DEBUG&lt;/span&gt;

	&lt;span class=&#34;nf&#34;&gt;DISCARDS&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image01.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image01.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
&lt;h3 id=&#34;エントリーポイント&#34;&gt;エントリーポイント&lt;/h3&gt;
&lt;p&gt;Linux kernelのエントリーポイントは&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;の&lt;code&gt;_start&lt;/code&gt;シンボルである。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;__HEAD&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Image&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;expected&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;by&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;Linux&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;boot-loaders.&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;data&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;structure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;described&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;asm&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;image.h.&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Do&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;modify&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;it&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;without&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;modifying&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;structure&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;bootloaders&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;that&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;expects&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;this&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;header&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;!!&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;jump&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_start_kernel&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;reserved&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.word&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#if __riscv_xlen == 64
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Image&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;MB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RAM&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.dword&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0x200000&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Image&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;MB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RAM&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.dword&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0x400000&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Effective&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;image&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.dword&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;_start&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.dword&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__HEAD_FLAGS&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.word&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISCV_HEADER_VERSION&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.word&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.dword&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.ascii&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISCV_IMAGE_MAGIC&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.balign&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.ascii&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISCV_IMAGE_MAGIC2&lt;/span&gt;
	&lt;span class=&#34;na&#34;&gt;.word&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なお、&lt;code&gt;_start&lt;/code&gt;シンボルの実体は&lt;code&gt;riscv_image_header&lt;/code&gt;構造体である。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/include/asm/image.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;nf&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;riscv_image_header&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;code0&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;code1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;text_offset&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;image_size&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flags&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;res1&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;res2&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u64&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;magic&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;magic2&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;no&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;res3&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;code0&lt;/code&gt;、&lt;code&gt;code1&lt;/code&gt;はRISC-Vの命令となっており、&lt;code&gt;code0&lt;/code&gt;は(&lt;code&gt;j _start_kernel&lt;/code&gt;)となっている。
また、&lt;code&gt;riscv_image_header&lt;/code&gt;のmagicナンバーは以下のようになっている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define RISCV_IMAGE_MAGIC	&amp;#34;RISCV\0\0\0&amp;#34;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define RISCV_IMAGE_MAGIC2	&amp;#34;RSC\x05&amp;#34;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;_start_kernel&#34;&gt;_start_kernel&lt;/h2&gt;
&lt;p&gt;次に、&lt;code&gt;_start_kernel&lt;/code&gt;を読んでいく。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;arch/riscv/kernel/head.S&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;nf&#34;&gt;__INIT&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ENTRY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;_start_kernel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Mask&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;all&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;interrupts&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_IE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrw&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_IP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_RISCV_M_MODE
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_RISCV_M_MODE */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Load&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;global&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pointer&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;push&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;norelax&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;gp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__global_pointer$&lt;/span&gt;
&lt;span class=&#34;na&#34;&gt;.option&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;pop&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Disable&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;FPU&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;detect&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;illegal&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;usage&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;of&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;floating&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;point&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;kernel&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;space&lt;/span&gt;
	 &lt;span class=&#34;err&#34;&gt;*/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;SR_FS&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;csrc&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;CSR_STATUS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;t0&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_SMP
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;na&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;割込みをクリア&#34;&gt;割込みをクリア&lt;/h3&gt;
&lt;p&gt;OpenSBIを用いているため、&lt;code&gt;CONFIG_RISCV_M_MODE&lt;/code&gt;はdefineしていないので、スキップする。&lt;/p&gt;
&lt;h3 id=&#34;global-pointerの設定&#34;&gt;global pointerの設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gp&lt;/code&gt;に&lt;code&gt;__global_pointer$&lt;/code&gt;をロードするときはlinker relaxationを無効にする。
FPUを無効にする。
今回はシングルコアなので、&lt;code&gt;CONFIG_SMP&lt;/code&gt;はdefineしていないのでスキップ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Pick&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;one&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hart&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;boot&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sequence&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hart_lottery&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;amoadd.w&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;bnez&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;.Lsecondary_start&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Clear&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;BSS&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;flat&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;non-ELF&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;images&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__bss_start&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;__bss_stop&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;ble&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;clear_bss_done&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;clear_bss:&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;zero&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;RISCV_SZPTR&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;blt&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;clear_bss&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;clear_bss_done:&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Save&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;hart&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;DTB&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;physical&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;address&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;boot_cpu_hartid&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;REG_S&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;a2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

	&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Initialize&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;page&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;tables&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;relocate&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;addresses&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;init_thread_union&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;THREAD_SIZE&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;mv&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;s1&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;setup_vm&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_MMU
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nf&#34;&gt;la&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;a0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;early_pg_dir&lt;/span&gt;
	&lt;span class=&#34;nf&#34;&gt;call&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;relocate&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#endif /* CONFIG_MMU */
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;boot-hartの選定&#34;&gt;Boot hartの選定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hart_lottery&lt;/code&gt;を使ってlotteryを行い、boot hartを決定する。&lt;/p&gt;
&lt;h3 id=&#34;bssのゼロクリア&#34;&gt;bssのゼロクリア&lt;/h3&gt;
&lt;p&gt;次に&lt;code&gt;__bss_start&lt;/code&gt;から&lt;code&gt;__bss_stop&lt;/code&gt;までを0クリアする。
これは、Linker script上のマクロ関数&lt;code&gt;BSS_SECTION&lt;/code&gt;を展開すると発見できる。
それぞれ、&lt;code&gt;.bss&lt;/code&gt;セクションの先頭と最後のアドレスである。&lt;/p&gt;
&lt;h3 id=&#34;ブートローダーからの情報の保存&#34;&gt;ブートローダーからの情報の保存&lt;/h3&gt;
&lt;p&gt;次に、前段のブートローダーから受けた、mhartid(&lt;code&gt;a0&lt;/code&gt;)とFDT PA(&lt;code&gt;a1&lt;/code&gt;)を保存する。
&lt;code&gt;boot_cpu_hartid&lt;/code&gt;にboot hartのmhartidを保存する。&lt;/p&gt;
&lt;h3 id=&#34;page-tableの初期化&#34;&gt;page tableの初期化&lt;/h3&gt;
&lt;p&gt;まず、&lt;code&gt;sp&lt;/code&gt;を初期化する。
&lt;code&gt;THREAD_SIZE&lt;/code&gt;は&lt;code&gt;arch/riscv/include/asm/thread_info.h&lt;/code&gt;に定義がある。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;err&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;thread&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;information&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;allocation&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;c&#34;&gt;#ifdef CONFIG_64BIT
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define THREAD_SIZE_ORDER	(2)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#else
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define THREAD_SIZE_ORDER	(1)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define THREAD_SIZE		(PAGE_SIZE &amp;lt;&amp;lt; THREAD_SIZE_ORDER)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;PAGE_SIZE&lt;/code&gt;は&lt;code&gt;arch/riscv/include/asm/page.h&lt;/code&gt;に定義がある。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_SHIFT	(12)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_SIZE	(_AC(1, UL) &amp;lt;&amp;lt; PAGE_SHIFT)
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;#define PAGE_MASK	(~(PAGE_SIZE - 1))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、&lt;code&gt;THREAD_SIZE&lt;/code&gt;はRV32の場合、8192((0x1&amp;laquo;12)&amp;laquo;1)になる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;init_thread_union&lt;/code&gt;はlinker scriptの&lt;code&gt;RW_DATA&lt;/code&gt;内の&lt;code&gt;INIT_TASK_DATA&lt;/code&gt;により定義される。
定義をたどるのがめんどいので、&lt;code&gt;arch/riscv/kernel/vmlinux.lds.S&lt;/code&gt;を事前にpreprocess(&lt;code&gt;arch/riscv/kernel/vmlinux.lds&lt;/code&gt;)したものを用意した。
&lt;code&gt;arch/riscv/kernel/vmlinux.lds&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt; &lt;span class=&#34;nf&#34;&gt;_data&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;;
&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;no&#34;&gt;ALIGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;; .data : AT(ADDR(.data) - 0xC0000000) { . = ALIGN(((1 &amp;lt;&amp;lt; (12)) &amp;lt;&amp;lt; (1))); __start_init_task = .; init_thread_union = .; init_stack = .; KEEP(*(.data..init_task)) KEEP(*(.data..init_thread_info)) . = __start_init_task + ((1 &amp;lt;&amp;lt; (12)) &amp;lt;&amp;lt; (1)); __end_init_task = .; . = ALIGN((1 &amp;lt;&amp;lt; (12))); __nosave_begin = .; *(.data..nosave) . = ALIGN((1 &amp;lt;&amp;lt; (12))); __nosave_end = .; . = ALIGN((1 &amp;lt;&amp;lt; (12))); *(.data..page_aligned) . = ALIGN((1 &amp;lt;&amp;lt; (12))); . = ALIGN((1 &amp;lt;&amp;lt; 6)); *(.data..cacheline_aligned) . = ALIGN((1 &amp;lt;&amp;lt; 6)); *(.data..read_mostly) . = ALIGN((1 &amp;lt;&amp;lt; 6)); *(.xiptext) *(.data) *(.ref.data) *(.data..shared_aligned) *(.data.unlikely) __start_once = .; *(.data.once) __end_once = .; . = ALIGN(32); *(__tracepoints) . = ALIGN(8); __start___dyndbg = .; KEEP(*(__dyndbg)) __stop___dyndbg = .; CONSTRUCTORS } . = ALIGN(8); __bug_table : AT(ADDR(__bug_table) - 0xC0000000) { __start___bug_table = .; KEEP(*(__bug_table)) __stop___bug_table = .; }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;さらに面倒くさいので、kernelをnmして探す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ nm vmlinux&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;grep init_thread_union
c1400000 D init_thread_union
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;init_thread_union&lt;/code&gt;のアドレスは、&lt;code&gt;0xc1400000&lt;/code&gt;である(Link Address)。&lt;/p&gt;
&lt;p&gt;つまり、&lt;code&gt;sp&lt;/code&gt;は(&lt;code&gt;0xc1400000 + 8192 = 0xc14002000&lt;/code&gt;)(Link Address)となる。&lt;/p&gt;
&lt;p&gt;ちなみに、&lt;code&gt;init_thread_union&lt;/code&gt;は&lt;code&gt;include/linux/sched.h&lt;/code&gt;て定義されている。
&lt;code&gt;include/linux/sched.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;union&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;thread_union&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#ifndef CONFIG_ARCH_TASK_STRUCT_ON_STACK
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task_struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;task&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#ifndef CONFIG_THREAD_INFO_IN_TASK
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;thread_info&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;thread_info&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#endif
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;THREAD_SIZE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)];&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;つまり、スタックか、&lt;code&gt;thread_info&lt;/code&gt;構造体、&lt;code&gt;task_struct&lt;/code&gt;と共用でメモリ領域を使用する。
今回の場合はスタックである。サイズは&lt;code&gt;THREAD_SIZE&lt;/code&gt;wordsなので、&lt;code&gt;THREAD_SIZE&lt;/code&gt;を&lt;code&gt;init_thread_union&lt;/code&gt;に加算することで、スタックの高位アドレスがわかる。&lt;/p&gt;
&lt;p&gt;OpenSBIのロードアドレスは&lt;code&gt;0x80000000&lt;/code&gt;である。
Linux kernelのOpenSBIからのロードオフセットは&lt;code&gt;0x00400000&lt;/code&gt;である。
Linux kernelの開始のロードアドレスは&lt;code&gt;0x80400000&lt;/code&gt;である。
Linux kernelの開始のリンクアドレスは&lt;code&gt;0xc0000000&lt;/code&gt;である。
スタックのロードアドレスは&lt;code&gt;0x81802000&lt;/code&gt;となる。(&lt;code&gt;0x80400000 + 0xc14002000 - 0xc0000000&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;image-container&#34;&gt;&lt;span class=&#34;link&#34; &gt;&lt;a href=&#34;./image02.png&#34; 
        target=&#34;_blank&#34;&gt;&lt;img class=&#34;img&#34; src=&#34;./image02.png&#34;/&gt;&lt;/a&gt;&lt;/span&gt;
&lt;/span&gt;
第一引数(&lt;code&gt;a0&lt;/code&gt;)にFDT PAをセットして、&lt;code&gt;setup_vm&lt;/code&gt;関数を呼ぶ。&lt;/p&gt;
&lt;p&gt;長くなってきたので、&lt;code&gt;setup_vm&lt;/code&gt;は次回にする。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading OpenSBI part7</title>
      <link>https://koyamanx.github.io/ck-dev/blog/reading_opensbi_part7/</link>
      <pubDate>Fri, 19 Mar 2021 05:17:26 +0900</pubDate>
      
      <guid>https://koyamanx.github.io/ck-dev/blog/reading_opensbi_part7/</guid>
      <description>&lt;p&gt;今回から、C言語によるOpenSBIの実装を見ていく。
&lt;code&gt;sbi_trap_handler&lt;/code&gt;と&lt;code&gt;sbi_init&lt;/code&gt;を読んでいく。&lt;/p&gt;
&lt;h3 id=&#34;sbi_trap_handler&#34;&gt;sbi_trap_handler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mscratch&lt;/code&gt;は&lt;code&gt;struct sbi_scratch&lt;/code&gt;を指している。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regs&lt;/code&gt;は&lt;code&gt;_trap_handler&lt;/code&gt;(&lt;code&gt;firmware/fw_base.S&lt;/code&gt;)にてセーブした(&lt;code&gt;struct sbi_trap_regs&lt;/code&gt;)のポインタである(&lt;code&gt;sp&lt;/code&gt; in &lt;code&gt;_trap_handler&lt;/code&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_trap.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_trap_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_trap_regs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SBI_ENOTSUPP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;trap handler failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;ulong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csr_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MCAUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;ulong&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csr_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MTVAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_trap_info&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misa_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csr_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MTVAL2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csr_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MTINST&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;トラップの情報はスタック上の(&lt;code&gt;struct sbi_trap_info&lt;/code&gt;)に保存する。
この情報はtrapをリダイレクトする際に用いる。
H-extensionが有効の場合は、&lt;code&gt;mtval2&lt;/code&gt;、&lt;code&gt;mtinst&lt;/code&gt;を取得する。(それ以外の場合は&lt;code&gt;0&lt;/code&gt;)
&lt;code&gt;include/sbi/sbi_trap.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;cm&#34;&gt;/** Representation of trap details */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_trap_info&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** epc Trap program counter */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;epc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** cause Trap exception cause */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** tval Trap value */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** tval2 Trap value 2 */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tval2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** tinst Trap instruction */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tinst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;interruptのtrap&#34;&gt;Interruptのtrap&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mcause&lt;/code&gt;の最上位ビットが1のときはInterruptによるトラップである。
ここでは、M-modeのタイマー割込みおよびM-modeのソフトウエア割込みの対処を行う。
それぞれ、&lt;code&gt;sbi_timer_process&lt;/code&gt;と&lt;code&gt;sbi_ipi_process&lt;/code&gt;が受け持つ。
M-modeの外部割込みは対処しない。(OpenSBIはM-modeで動作する、OpenSBIはM-modeの外部割込みを使用ない)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1UL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__riscv_xlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1UL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__riscv_xlen&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;IRQ_M_TIMER&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;sbi_timer_process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;IRQ_M_SOFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;sbi_ipi_process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;unhandled external interrupt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trap_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;sbi_timer_process&#34;&gt;sbi_timer_process&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_timer.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sbi_timer_process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;csr_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MIE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIP_MTIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;csr_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIP_STIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;sbi_timer_process&lt;/code&gt;では、M-modeのタイマー割込みをS-modeのタイマー割込みとして発生させる。
単に、M-modeのタイマー割込みを停止して(mie.mtip = 0)、S-modeのタイマー割込みを発生させる(mie.stip = 1)。
現在はM-modeのトラップなので、低位のモードのトラップは遅延する。
後続の&lt;code&gt;sbi_trap_redirect&lt;/code&gt;にて実際にトラップのリダイレクトを行う。&lt;/p&gt;
&lt;h4 id=&#34;sbi_ipi_process&#34;&gt;sbi_ipi_process&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_ipi.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sbi_ipi_process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ipi_event_ops&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_ops&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch_thishart_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ipi_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;sbi_scratch_offset_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_data_off&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;sbi_platform_ipi_clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;atomic_raw_xchg_ulong&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_data&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;ipi_event&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1UL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;goto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;skip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

		&lt;span class=&#34;n&#34;&gt;ipi_ops&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_ops_array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_event&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_ops&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_ops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;ipi_ops&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;skip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ipi_event&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;scratch spaceから&lt;code&gt;struct sbi_ipi_data&lt;/code&gt;を取り出している。
&lt;code&gt;ipi_data&lt;/code&gt;は&lt;code&gt;sbi_ipi_init&lt;/code&gt;にてscratch spaceに作成している様子。
&lt;code&gt;ipi_data&lt;/code&gt;は&lt;code&gt;sbi_ipi_send&lt;/code&gt;にてリモート(ipi先)のhartのscratch spaceにセットする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ipi_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ipi_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sbi_ipi_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cold_boot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ret&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ipi_data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cold_boot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ipi_data_off&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch_alloc_offset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ipi_data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
							&lt;span class=&#34;s&#34;&gt;&amp;#34;IPI_DATA&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;取得した&lt;code&gt;ipi_data-&amp;gt;ipi_type&lt;/code&gt;を用いて&lt;code&gt;struct sbi_ipi_event_ops ipi_ops_array&lt;/code&gt;を索引し&lt;code&gt;ipi_ops&lt;/code&gt;を取得、(&lt;code&gt;ipi_ops-&amp;gt;process()&lt;/code&gt;)実行する。
なお、&lt;code&gt;ipi_type&lt;/code&gt;のビットポジションが0からの添字に対応している。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;include/sbi/sbi_ipi.h&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/** IPI event operations or callbacks */&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ipi_event_ops&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;cm&#34;&gt;/** Name of the IPI event operations */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Update callback to save/enqueue data for remote HART
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Note: This is an optional callback and it is called just before
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * triggering IPI to remote HART.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remote_scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remote_hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Sync callback to wait for remote HART
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Note: This is an optional callback and it is called just after
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * triggering IPI to remote HART.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sync&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/**
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Process callback to handle IPI event
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Note: This is a mandatory callback and it is called on the
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * remote HART after IPI is triggered.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;struct ipi_event_ops ipi_ops_array&lt;/code&gt;は&lt;code&gt;sbi_ipi_event_create&lt;/code&gt;を用いて&lt;code&gt;sbi_ipi_init&lt;/code&gt;内で初期化される。&lt;/p&gt;
&lt;h3 id=&#34;exception-trap&#34;&gt;Exception trap&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sbi_trap_handler&lt;/code&gt;の続き&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;	&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;CAUSE_ILLEGAL_INSTRUCTION&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_illegal_insn_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;illegal instruction handler failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;CAUSE_MISALIGNED_LOAD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_misaligned_load_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;misaligned load handler failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;CAUSE_MISALIGNED_STORE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_misaligned_store_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;misaligned store handler failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;CAUSE_SUPERVISOR_ECALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;CAUSE_MACHINE_ECALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_ecall_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;ecall handler failed&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* If the trap came from S or U mode, redirect it there */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;epc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mepc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cause&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tval2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tinst&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_trap_redirect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;nl&#34;&gt;trap_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;sbi_trap_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mcause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtval2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mtinst&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;次に、mcauseの最上位ビットが0のパターン(例外によるトラップ)。
Illegal Instruction Exception, Load Address Misaligned exception, Store AMO Address Misalgined Exception, ECALL From S/M modeは
OpenSBIによって、トラップする。その後、各例外に対応したハンドラー(&lt;code&gt;sbi_illegal_insn_handler&lt;/code&gt;, &lt;code&gt;sbi_misaligned_load_handler&lt;/code&gt;, &lt;code&gt;sbi_msialgined_store_handler&lt;/code&gt;, &lt;code&gt;sbi_ecall_handler&lt;/code&gt;)へ制御を移す。&lt;/p&gt;
&lt;p&gt;それ以外の例外(S-modeもしくはU-mode由来)のものは、それぞれのモードへトラップのコンテキストとともにリダイレクト(&lt;code&gt;sbi_trap_redirect&lt;/code&gt;)する。
なお、delegateされているトラップについては、各モードにてハンドルされ、OpenSBIは感知しない。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sbi_trap_redirect&lt;/code&gt;について見ていく。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_trap.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* Update S-mode exception info */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;csr_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_STVAL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;csr_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_SEPC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;epc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;csr_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_SCAUSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* Set MEPC to S-mode exception vector base */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mepc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;csr_read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_STVEC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* Set MPP to S-mode */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MSTATUS_MPP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PRV_S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MSTATUS_MPP_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* Set SPP for S-mode */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MSTATUS_SPP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;prev_mode&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PRV_S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1UL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MSTATUS_SPP_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* Set SPIE for S-mode */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MSTATUS_SPIE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MSTATUS_SIE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1UL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MSTATUS_SPIE_SHIFT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

		&lt;span class=&#34;cm&#34;&gt;/* Clear SIE for S-mode */&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;regs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mstatus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MSTATUS_SIE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;M-modeのトラップコンテキストをS-modeへ移している。
M-modeのトラップハンドラーを&lt;code&gt;mret&lt;/code&gt;したあとに、S-modeのトラップハンドラへ制御が移る。&lt;/p&gt;
&lt;h2 id=&#34;sbi_init&#34;&gt;sbi_init&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_init.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__noreturn&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sbi_init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;next_mode_supported&lt;/span&gt;	&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;coldboot&lt;/span&gt;			&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;FALSE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;u32&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;			&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;current_hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SBI_HARTMASK_MAX_BITS&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt;
	    &lt;span class=&#34;n&#34;&gt;sbi_platform_hart_invalid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;sbi_hart_hang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;switch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_mode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;PRV_M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;next_mode_supported&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;PRV_S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misa_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;next_mode_supported&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;PRV_U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misa_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;U&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;next_mode_supported&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;sbi_hart_hang&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * Only the HART supporting privilege mode specified in the
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * scratch-&amp;gt;next_mode should be allowed to become the coldboot
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * HART because the coldboot HART will be directly jumping to
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * the next booting stage.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * We use a lottery mechanism to select coldboot HART among
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * HARTs which satisfy above condition.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;next_mode_supported&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;atomic_xchg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coldboot_lottery&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;coldboot&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TRUE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coldboot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;init_coldboot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;init_warmboot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hartid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;coldboot&lt;/code&gt;を&lt;code&gt;coldboot_lottery&lt;/code&gt;よりはじめに&lt;code&gt;atomic_xchg&lt;/code&gt;で0を読み出したhart(特権モード必須)が担当する。
&lt;code&gt;init_coldboot&lt;/code&gt;は次のレベルのクライアントプログラムにジャンプする。
その他のコアは&lt;code&gt;init_warmboot&lt;/code&gt;する。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sbi_init&lt;/code&gt;については、以下のリンク先のサイトがわかりやすい。(Versionが違うことに注意)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cstmize.hatenablog.jp/entry/2019/10/21/OpenSBI%E3%81%AE%E5%86%85%E9%83%A8%E5%AE%9F%E8%A3%85%28boot~linux_kernel%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E3%81%BE%E3%81%A7%29&#34;target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;OpenSBIの内部実装(boot~linux kernelを実行するまで)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenSBIから制御が移ると、クライアントプログラムからOpenSBIへ移る手段はトラップのみである。
上のリンクにも上がっていたが、どのトラップがトリガーになっているかしっかり調べておく。&lt;/p&gt;
&lt;h2 id=&#34;delegate_traps&#34;&gt;delegate_traps&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;delegate_traps&lt;/code&gt;は&lt;code&gt;lib/sbi/sbi_hart.c&lt;/code&gt;で定義されている関数で、低位の特権モードへトラップをDelegationを設定する。
&lt;code&gt;delegate_traps&lt;/code&gt;は&lt;code&gt;sbi_init&lt;/code&gt;中&lt;code&gt;sbi_hart_init&lt;/code&gt;で呼ばれる。
Delegateされていないトラップについては、M-modeでOpenSBIにハンドルされることとなる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;lib/sbi/sbi_hart.c&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;delegate_traps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_scratch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sbi_platform_ptr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;scratch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misa_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;S&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* No delegation possible as mideleg does not exist */&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/* Send M-mode interrupts and most exceptions to S-mode */&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;interrupts&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIP_SSIP&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIP_STIP&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MIP_SEIP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_MISALIGNED_FETCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_BREAKPOINT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
		     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_USER_ECALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sbi_platform_has_mfaults_delegation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;plat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_FETCH_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
			      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_LOAD_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;
			      &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_STORE_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * If hypervisor extension available then we only handle hypervisor
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * calls (i.e. ecalls from HS-mode) in M-mode.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 *
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * The HS-mode will additionally handle supervisor calls (i.e. ecalls
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 * from VS-mode), Guest page faults and Virtual interrupts.
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	 */&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;misa_extension&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_VIRTUAL_SUPERVISOR_ECALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_FETCH_GUEST_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_LOAD_GUEST_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_VIRTUAL_INST_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1U&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;CAUSE_STORE_GUEST_PAGE_FAULT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;csr_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MIDELEG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interrupts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;csr_write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CSR_MEDELEG&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;exceptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当たり前だが、S-modeがない場合はdelagetionはできない。&lt;/p&gt;
&lt;h4 id=&#34;割込みdelegationの設定&#34;&gt;割込みdelegationの設定&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Supervisor Software Interrput&lt;/li&gt;
&lt;li&gt;Supervisor Timer Interrput&lt;/li&gt;
&lt;li&gt;Supervisor External Interrput&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;例外delegationの設定&#34;&gt;例外delegationの設定&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Environment Call From U Mode&lt;/li&gt;
&lt;li&gt;Instruction Address Misaligned&lt;/li&gt;
&lt;li&gt;Environment breakpoint&lt;/li&gt;
&lt;li&gt;Instruction Page Fault	(satpありの場合)&lt;/li&gt;
&lt;li&gt;Load Page Fault			(satpありの場合)&lt;/li&gt;
&lt;li&gt;Store AMO Page Fault		(satpありの場合)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上にリストしたものに関してはS-mode以下の特権モードにてハンドルされる。&lt;/p&gt;
&lt;p&gt;これでなんとなくであるが、OpenSBIを理解した。
今後、OpenSBIとクライアントプログラムのやり取りがわからなくなったら深堀していこうとおもう。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>